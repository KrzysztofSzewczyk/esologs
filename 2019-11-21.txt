2019-11-21 00:02:26 <fizzie> Weird. I've been refactoring umlbox code a little (in preparation for some tweaks), and one thing I changed was to start using "con1=fd:N,fd:M", where N is /dev/null (opened RDWR) and M is the inherited stdout (for capturing the command output).
2019-11-21 00:02:53 <fizzie> Previously it was "con1=null,fd:M", which uses UML's 'null' console type instead, which makes reads block forever.
2019-11-21 00:03:08 <fizzie> Locally this seemed to make commands like "cat" reliably return quickly, instead of waiting for the timeout. But on the bot machine, it's... flaky. Now it's again returning quickly, but earlier I wasn't, even though I changed nothing.
2019-11-21 00:03:12 <fizzie> `cat
2019-11-21 00:03:14 <HackEso> No output.
2019-11-21 00:03:21 <fizzie> Odd.
2019-11-21 00:10:35 Joined: Sgeo
2019-11-21 00:10:35 Names: \oren\, ^[, aji, aloril, APic, atriq, b_jonas, bfbot, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, economicsbat, erdic, esowiki, FireFly, fizzie, FreeFull, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, iczero, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, kspalaiologos, laerling, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex, Vorpal, wmww, zemhill, zzo38
2019-11-21 00:16:50 <shachaf> I'm at a bookstore and I picked a book semi-randomly and opened it at a page semi-randomly and it talks about ais523.
2019-11-21 00:17:04 <kmc> *blink*
2019-11-21 00:17:06 <kmc> wow
2019-11-21 00:17:21 <shachaf> I mean, it's a book about computability or something, so not that random.
2019-11-21 00:18:13 Quit: FreeFull
2019-11-21 00:18:14 Names: \oren\, ^[, aji, aloril, APic, atriq, b_jonas, bfbot, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, economicsbat, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, iczero, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, kspalaiologos, laerling, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex, Vorpal, wmww, zemhill, zzo38
2019-11-21 01:32:26 Joined: oerjan
2019-11-21 01:32:26 Names: \oren\, ^[, aji, aloril, APic, atriq, b_jonas, bfbot, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, economicsbat, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, iczero, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, kspalaiologos, laerling, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex, Vorpal, wmww, zemhill, zzo38
2019-11-21 01:40:49 User Name: oerjan = oerjan!oerjan@sprocket.nvg.ntnu.no
2019-11-21 01:40:49 <oerjan> ^wiki
2019-11-21 01:40:49 <fungot> https://esolangs.org/wiki/
2019-11-21 01:46:16 <oerjan> b_jonas: oh right, ed doesn't strictly need a terminal.
2019-11-21 01:46:49 <fizzie> oerjan: That one I restored from the logs.
2019-11-21 01:46:49 <oerjan> in fact probably doesn't care
2019-11-21 01:46:59 <oerjan> fizzie: ah
2019-11-21 01:47:22 <oerjan> i saw your message about restoring and wondered how much you'd wiped out
2019-11-21 01:47:24 <oerjan> ^show
2019-11-21 01:47:24 <fungot> echo reverb rev rot13 rev2 fib wc ul cho choo pow2 source help hw srmlebac uenlsbcmra scramble unscramble asc ord prefixes tmp test celebrate wiki chr ha rainbow rainbow2 welcome me tell eval elikoski list ping def a thanks tmp2 8ball rreree rerere botsnack bf
2019-11-21 01:50:23 <oerjan> ^a
2019-11-21 01:50:23 <fungot> ............................................................................................................................................................................................................... ...
2019-11-21 01:50:28 <oerjan> ^show a
2019-11-21 01:50:28 <fungot> +13[.]
2019-11-21 01:50:31 <fizzie> There's a wonky thing umlbox does which is to append a ' | cat' to the command line if the stdout of the call isn't a terminal. I assume that's because from the UML command's perspective /dev/tty1 is always a TTY, even when UML has connected it to a pipe/file.
2019-11-21 01:51:09 <oerjan> mhm
2019-11-21 01:53:44 <fizzie> Hm, I've broken something. :/
2019-11-21 01:55:21 <oerjan> NOOOOOOOOOOOOO
2019-11-21 01:55:45 <fizzie> `` echo foo; echo bar; echo baz
2019-11-21 01:55:46 <HackEso> foo \ bar \ baz
2019-11-21 01:55:48 <fizzie> `` echo foo >&2; echo bar >&2; echo baz >&2
2019-11-21 01:55:48 <HackEso> foo
2019-11-21 01:55:52 <fizzie> That's not right.
2019-11-21 01:58:52 <kmc> o_O
2019-11-21 01:59:05 <fizzie> Oh, that's right, that's one reason why stdout and stderr ordering was pretty wonky even before: the '| cat' thing only deals with stdout, stderr goes directly to /dev/tty1.
2019-11-21 01:59:33 <fizzie> That said, I'm not sure what I managed to break there.
2019-11-21 02:02:49 Quit: joast (Quit: Leaving.)
2019-11-21 02:02:49 Names: \oren\, ^[, aji, aloril, APic, atriq, b_jonas, bfbot, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, economicsbat, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, iczero, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, kingoffrance, kmc, kspalaiologos, laerling, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex, Vorpal, wmww, zemhill, zzo38
2019-11-21 02:03:35 <oerjan> `` (echo foo; echo bar; echo baz) >&2
2019-11-21 02:03:36 <HackEso> foo
2019-11-21 02:03:44 <oerjan> something EOL handling?
2019-11-21 02:04:00 <oerjan> `` (echo foo; echo bar; echo baz) >&2; echo fizz
2019-11-21 02:04:02 <HackEso> No output.
2019-11-21 02:04:10 <fizzie> Mmmaybe. I don't see how though.
2019-11-21 02:04:14 <oerjan> huh
2019-11-21 02:04:24 <fizzie> I also got two different outputs for the same command before, so there's a race condition somewhere as well.
2019-11-21 02:04:27 <oerjan> `` echo buzz; (echo foo; echo bar; echo baz) >&2; echo fizz
2019-11-21 02:04:27 <HackEso> foo
2019-11-21 02:05:13 <fizzie> I assume it could be the newline translation, it's just odd how that could be affected.
2019-11-21 02:07:41 <fizzie> What the hackbot side does is, `p = subprocess.Popen(args, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, close_fds=True); p.stdin.close(); ret = p.stdout.read(1024)`. No matter how the UML process outputs things, they should all still end up in the same pipe.
2019-11-21 02:09:33 <shachaf> int-e: Hmm, is something like "non-chronological backjumping" actually mandatory when doing clause learning?
2019-11-21 02:09:54 <shachaf> I thought it would be optional but you want to have a reason for every assignment, and if you do regular backtracking, do you even have a reason?
2019-11-21 02:09:56 <fizzie> b
2019-11-21 02:10:24 <shachaf> Also maybe you're tired of random SAT questions, hmm.
2019-11-21 02:11:57 <oerjan> . o O ( do you like random SAT questions? )
2019-11-21 02:12:53 Joined: joast
2019-11-21 02:12:53 Names: \oren\, ^[, aji, aloril, APic, atriq, b_jonas, bfbot, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, economicsbat, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, iczero, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, kspalaiologos, laerling, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex, Vorpal, wmww, zemhill, zzo38
2019-11-21 02:15:07 <fizzie> Yeah, IDGI. Running the umlbox command line for 'echo foo; echo bar; echo baz' and 'echo foo >&2; echo bar >&2; echo baz >&2' manually on the same system, with 1>/tmp/out.1 2>/tmp/out.2, there's no difference: both write exactly the same content into.... ohhh, I get it.
2019-11-21 02:16:03 <fizzie> The bot does a .read() on the stdout pipe. When you're writing to stderr, it probably gets split to multiple writes, which means it only receives the first line.
2019-11-21 02:16:32 <fizzie> But when you write to stdout, it's a fully buffered stream (through the | cat), so it gets the full chunk in one .read().
2019-11-21 02:17:13 <oerjan> fiendish
2019-11-21 02:20:11 <fizzie> I think I can just wrap it in a io.BufferedReader to fix it. Although I still don't know how it actually broke.
2019-11-21 02:23:49 <shachaf> int-e: Wait, maybe I'm just wrong and you can use the conflicting clause.
2019-11-21 02:28:59 <fizzie> Hmm, well, it wasn't that simple. It's true that the .read() call only returns the first line, but then a subsequent .read() actually says it's at EOF. How does that make sense? It doesn't make sense.
2019-11-21 02:30:02 <fizzie> Maybe it could be non-blocking somehow... although I don't think so.
2019-11-21 02:35:02 <fizzie> No, it's not that. If I make umlbox write a line to the file descriptor used before closing it, the bot does read that.
2019-11-21 02:35:25 <fizzie> So it's just that somehow the uml terminates before it has written all the output.
2019-11-21 02:40:35 <fizzie> Super weird. It also happens outside the bot, if I direct the output to a pipe. Immediately after the first line has been written, it terminates. With no messages.
2019-11-21 02:52:44 <oerjan> did this change happen when you upgraded debian, or is there something you actually edited involved?
2019-11-21 02:53:25 <oerjan> fizzie: ^
2019-11-21 02:53:45 <oerjan> because the latter should at least be bisectable...
2019-11-21 02:54:05 <fizzie> Hard to say. People don't usually write to stderr that much. But I can always roll back to an old version and test again.
2019-11-21 02:54:24 <fizzie> Right now I'm getting really bizarre behavior out.
2019-11-21 02:55:12 <oerjan> just change that | cat to |& cat  and call it a day :)
2019-11-21 02:56:03 <shachaf> int-e: Wait, now I'm on the train and it doesn't make sense again.
2019-11-21 02:56:04 <fizzie> It runs using /bin/sh, it doesn't work there. But I did give that a think.
2019-11-21 02:56:16 <fizzie> 2>&1 | cat might work.
2019-11-21 02:57:21 <oerjan> shachaf: that reminds me of something.  oh right, the "i'm on a horse" meme.
2019-11-21 02:57:37 <fizzie> Anyway, the output behaviour is really bizarre. I'm adding printfs here in umlbox init, and only some of them get out, even when I'm not really doing anything special. As soon as it starts to read from the /ubda device, everything goes weird.
2019-11-21 02:58:18 <fizzie> I seem to consistently get all the output from the printfs before the first read, whatever that means.
2019-11-21 02:59:17 <fizzie> Well, except sometimes I don't get even that.
2019-11-21 02:59:26 <shachaf> oerjan: Is that like "I've been through the desert on a horse with no name"?
