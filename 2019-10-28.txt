2019-10-28 00:00:27 Quit: Sgeo (Ping timeout: 240 seconds)
2019-10-28 00:05:58 Quit: oerjan (Quit: Nite)
2019-10-28 00:05:59 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, FreeFull, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 00:06:57 Quit: int-e (Remote host closed the connection)
2019-10-28 00:06:57 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, FreeFull, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 00:07:41 Joined: int-e
2019-10-28 00:07:41 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, FreeFull, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 00:08:52 Joined: Sgeo
2019-10-28 00:12:01 Quit: Sgeo (Ping timeout: 250 seconds)
2019-10-28 00:13:05 Quit: FreeFull
2019-10-28 00:13:05 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 00:29:51 Joined: Sgeo
2019-10-28 00:33:14 Quit: imode (Ping timeout: 240 seconds)
2019-10-28 00:33:15 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 00:33:41 Quit: Sgeo (Ping timeout: 276 seconds)
2019-10-28 01:30:54 <esowiki> 14[[07Semantic Brain14]]4 10 02https://esolangs.org/w/index.php?diff=66826&oldid=66326 5* 03SilverWingedSeraph 5* (-216) 10Fix jump instruction behavior.
2019-10-28 01:31:27 Joined: imode
2019-10-28 01:31:27 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 01:41:47 Quit: Sgeo (Read error: Connection reset by peer)
2019-10-28 01:41:48 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 01:44:22 Joined: Sgeo
2019-10-28 01:44:23 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 01:56:55 <esowiki> 14[[07Semantic Brain14]]4 10 02https://esolangs.org/w/index.php?diff=66827&oldid=66826 5* 03SilverWingedSeraph 5* (-1966) 10Remove the unused instructions, bringing the instruction size down to 5 bits.
2019-10-28 01:57:33 <esowiki> 14[[07Semantic Brain14]]4 M10 02https://esolangs.org/w/index.php?diff=66828&oldid=66827 5* 03SilverWingedSeraph 5* (+0) 10
2019-10-28 02:55:37 Quit: moony (Ping timeout: 240 seconds)
2019-10-28 02:55:37 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 03:05:15 Quit: iovoid (Ping timeout: 246 seconds)
2019-10-28 03:05:15 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 03:05:47 Quit: wlp1s1 (Ping timeout: 276 seconds)
2019-10-28 03:05:47 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 03:05:49 Quit: Bowserinator (Ping timeout: 268 seconds)
2019-10-28 03:05:49 Names: \oren\, ^[, aji, aloril, APic, b_jonas, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 03:42:32 Joined: atslash
2019-10-28 03:42:32 Names: \oren\, ^[, aji, aloril, APic, atslash, b_jonas, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 03:43:18 <zzo38> How to disable kerning for editable text in Firefox?
2019-10-28 03:46:37 Quit: atslash (Ping timeout: 240 seconds)
2019-10-28 03:46:37 Names: \oren\, ^[, aji, aloril, APic, b_jonas, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, imode, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 03:58:22 <shachaf> Why do you want to disable kerning for editable text in Firefox?
2019-10-28 03:59:13 <zzo38> Because kerning is not very good for text editing; it is suitable only for text that is only for reading and not for editing.
2019-10-28 04:00:21 User Name: imode = imode!~linear@unaffiliated/imode
2019-10-28 04:00:21 <imode> override the editable text field to use a monospace font, then.
2019-10-28 04:01:13 <zzo38> Yes, I suppose that would be one way to do.
2019-10-28 04:01:20 <kmc> keming
2019-10-28 04:04:40 <shachaf> If you use a font without kerning information I assume it would work.
2019-10-28 04:07:29 <zzo38> Yes, although it uses fonts with kerning by default
2019-10-28 04:14:57 Quit: imode (Ping timeout: 240 seconds)
2019-10-28 04:14:57 Names: \oren\, ^[, aji, aloril, APic, b_jonas, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 04:29:10 Joined: moony
2019-10-28 04:29:11 Names: \oren\, ^[, aji, aloril, APic, b_jonas, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 04:30:08 Joined: Bowserinator
2019-10-28 04:30:08 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 04:30:35 Joined: iovoid
2019-10-28 04:30:35 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zzo38
2019-10-28 04:30:57 Joined: wlp1s1
2019-10-28 04:30:57 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 04:31:47 <zzo38> I added a fax encoder/decoder in Farbfeld Utilities now. Unlike the other programs, these ones are written in PostScript, although an implementation in C might also be added later.
2019-10-28 04:33:45 <zzo38> ImageMagick will only decode Group 3 files if you specify EndOfLine=true for fffax, but ImageMagick will only decode Group 4 files if you specify EndOfLine=false for fffax. I don't know why. Also, when decoding a Group 4 file, ImageMagick will display 'Bad value 0 for "Orientation" tag.' even though it successfully decodes it.
2019-10-28 04:33:51 <zzo38> Do you know why ImageMagick does that?
2019-10-28 05:36:13 <esowiki> 14[[07User:Moon/common.js14]]4 10 02https://esolangs.org/w/index.php?diff=66829&oldid=66764 5* 03Moon 5* (+237) 10add sandbox link
2019-10-28 05:39:33 <esowiki> 14[[07MediaWiki talk:Common.js14]]4 10 02https://esolangs.org/w/index.php?diff=66830&oldid=56460 5* 03Moon 5* (+526) 10/* Add a sandbox link */ new section
2019-10-28 07:43:39 <b_jonas> I don't know. I only saw fax files on one website (though a large quantity there), and ImageMagick could read them fine.
2019-10-28 08:07:54 <b_jonas> zzo38: re kerning: https://developer.mozilla.org/en-US/docs/Web/CSS/font-kerning
2019-10-28 08:09:20 <b_jonas> that said I think kerning is still useful for editable text. it's non-greedy action-at-a-distance line break finding that you usually disable for editable text so that words don't jump around between lines.
2019-10-28 08:39:33 Joined: cpressey
2019-10-28 08:39:34 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 08:54:47 Quit: b_jonas (Remote host closed the connection)
2019-10-28 08:54:47 Names: \oren\, ^[, aji, aloril, APic, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 09:00:20 User Name: cpressey = cpressey!~cpressey@5.133.242.4
2019-10-28 09:00:20 <cpressey> Good morning. I have another esolang and I plan to release it today.
2019-10-28 09:53:40 <esowiki> 14[[07Oxcart14]]4 N10 02https://esolangs.org/w/index.php?oldid=66831 5* 03Chris Pressey 5* (+4013) 10Initial article for Oxcart, a continuation-passing concatenative language.
2019-10-28 09:54:41 <cpressey> ^^
2019-10-28 09:55:08 <cpressey> An implementation is available in the GitHub repo linked to therein.
2019-10-28 10:05:23 <shachaf> I rewrote my printf-style function as a state machine, but I ran into the unfortunate issue that it supports custom formatters, and those also need to be written as state machines for maximal correctness.
2019-10-28 10:05:51 <esowiki> 14[[07Language list14]]4 10 02https://esolangs.org/w/index.php?diff=66832&oldid=66797 5* 03Chris Pressey 5* (+13) 10/* O */ Add Oxcart
2019-10-28 10:06:43 <shachaf> I thought just restarting each formatter from scratch would be sufficient, but it can lead to infinite loops if you're using a fixed size buffer and the formatter tries to write something larger than that.
2019-10-28 10:06:55 Joined: LKoen
2019-10-28 10:06:55 Names: \oren\, ^[, aji, aloril, APic, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 10:07:05 <shachaf> Oh, hmm, there's actual esolang activity in here.
2019-10-28 10:08:34 <shachaf> :t let comp f g x k = f x (\s -> g s k) in comp
2019-10-28 10:08:36 <lambdabot> (t1 -> (t2 -> t3) -> t4) -> (t2 -> t5 -> t3) -> t1 -> t5 -> t4
2019-10-28 10:09:45 <shachaf> Too general.
2019-10-28 10:11:51 <shachaf> I guess I should just read it as (b -> (c -> r) -> r) -> (a -> (b -> r) -> r) -> a -> (c -> r) -> r
2019-10-28 10:12:10 <shachaf> Which is the obvious thing.
2019-10-28 10:15:51 <shachaf> cpressey: I think you copied some text from the Wagon page.
2019-10-28 10:18:23 <cpressey> I did copy some text from the Wagon page, to start it off, but did I fail to update it appropriately?
2019-10-28 10:18:47 * cpressey reads
2019-10-28 10:19:28 <shachaf> I just mean the Primitives section.
2019-10-28 10:19:52 <cpressey> Ah, I see some errors. I'll fix them
2019-10-28 10:20:43 <shachaf> Maybe (a -> (b -> r) -> r) should be ((b -> r) -> a -> r) instead.
2019-10-28 10:21:48 <esowiki> 14[[07Oxcart14]]4 10 02https://esolangs.org/w/index.php?diff=66833&oldid=66831 5* 03Chris Pressey 5* (+8) 10Fix lead paragraph in Primitives section
2019-10-28 10:22:58 <esowiki> 14[[07Oxcart14]]4 M10 02https://esolangs.org/w/index.php?diff=66834&oldid=66833 5* 03Chris Pressey 5* (+106) 10Note that Oxcart is not a minimal language
2019-10-28 10:24:45 <shachaf> What is "continue as normal"?
2019-10-28 10:25:29 <shachaf> I think I'm confused about how evaluation works.
2019-10-28 10:25:35 <shachaf> Also I think I should go to sleep.
2019-10-28 10:25:46 Joined: wib_jonas
2019-10-28 10:25:46 Names: \oren\, ^[, aji, aloril, APic, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wib_jonas, wlp1s1, wmww, zemhill, zzo38
2019-10-28 10:27:22 Joined: oerjan
2019-10-28 10:27:22 Names: \oren\, ^[, aji, aloril, APic, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wib_jonas, wlp1s1, wmww, zemhill, zzo38
2019-10-28 10:28:16 <esowiki> 14[[07Oxcart14]]4 M10 02https://esolangs.org/w/index.php?diff=66835&oldid=66834 5* 03Chris Pressey 5* (+179) 10Clarify what "continue as normal" means, and what the initial continuation is.
2019-10-28 10:29:21 * wib_jonas disables layout.css.text-decoration-skip-ink.enabled in firefox after an annoying update made underlined text look ugly
2019-10-28 10:29:29 User Name: wib_jonas = wib_jonas!25bf3cd1@gateway/web/cgi-irc/kiwiirc.com/ip.37.191.60.209
2019-10-28 10:29:29 <wib_jonas> in the about:config that is
2019-10-28 10:30:43 <esowiki> 14[[07Oxcart14]]4 M10 02https://esolangs.org/w/index.php?diff=66836&oldid=66835 5* 03Chris Pressey 5* (+25) 10Add extra section in order to make ToC appear higher up in page
2019-10-28 10:31:48 <wib_jonas> cpressey: there's also the magic word __TOC__ to insert the table of contents right where that magic word is
2019-10-28 10:31:54 <wib_jonas> https://www.mediawiki.org/wiki/Help:Magic_words
2019-10-28 10:32:36 <shachaf> What is the current continuation? Is it part of the program state?
2019-10-28 10:33:07 <wib_jonas> shachaf: I think you'll have to read the source code of the implementation
2019-10-28 10:34:10 <cpressey> shachaf: The current continuation is the second argument that the function receives.
2019-10-28 10:34:15 Joined: ais523
2019-10-28 10:34:16 Names: \oren\, ^[, ais523, aji, aloril, APic, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wib_jonas, wlp1s1, wmww, zemhill, zzo38
2019-10-28 10:34:38 <wib_jonas> cpressey: but is the tape of stacks part of that continuation?
2019-10-28 10:34:50 <wib_jonas> or does that live outside with only one copy?
2019-10-28 10:34:54 <cpressey> wib_jonas: No, that's the first argument.
2019-10-28 10:35:14 User Name: ais523 = ais523_!93bcc3da@gateway/web/cgi-irc/kiwiirc.com/ip.147.188.195.218
2019-10-28 10:35:14 <ais523> shachaf: if you have a sufficiently pure programming model, the current continuation is the %Ientire%I state of the interpreter / the running program; impure languages tend to leave bits of it out though
2019-10-28 10:35:15 <cpressey> f(x, k) = f(state, kontinuation)
2019-10-28 10:35:20 <wib_jonas> cpressey: so there's only one tape of stacks?
2019-10-28 10:35:38 <ais523> also apparently my usual shortcut for italics doesn't work with this client
2019-10-28 10:36:23 <ais523> although, "current" continuation is a bit misleading, the continuation that call/cc generates is the continuation that its first argument returns to
2019-10-28 10:36:25 <cpressey> wib_jonas: No, it's a purely functional language, so each operation takes a state and passes a new, transformed state to its continuation
2019-10-28 10:36:48 <shachaf> ais523_: How much of what you said is applicable to this language?
2019-10-28 10:36:56 <shachaf> I know what continuations are in general.
2019-10-28 10:37:01 <ais523> I don't know, I don't know the language, haven't logread yet
2019-10-28 10:37:54 <shachaf> I see. My question was about this language, not continuations in general.
2019-10-28 10:37:59 <wib_jonas> ah, the github has more explanation, not only an implementation
2019-10-28 10:38:01 <wib_jonas> let's see
2019-10-28 10:39:56 <ais523> looking at the definition of Oxcart, the spec seems to treat continuations as opaque data that is acted on by the program
2019-10-28 10:40:16 <ais523> I think a literal understanding of the esolangs.org page would have the stacks not be part of it
2019-10-28 10:40:24 <ais523> hmm, this reminds me of an Underload derivative I was working on a while back
2019-10-28 10:40:33 <ais523> with some introspection primitives
2019-10-28 10:41:02 <ais523> one captured the state of the entire stack; the other captured the entire list of commands that were yet to run
2019-10-28 10:41:04 <esowiki> 14[[07Oxcart14]]4 10 02https://esolangs.org/w/index.php?diff=66837&oldid=66836 5* 03Chris Pressey 5* (+236) 10Try to clarify what continuation-passing style means in this instance.
2019-10-28 10:41:29 <ais523> those could be used to create various continuation-alikes that captured different amounts of state
2019-10-28 10:41:45 <shachaf> cpressey: I see now. I forgot that each symbol represents a function of one argument.
2019-10-28 10:42:51 <wib_jonas> cpressey: two arguments
2019-10-28 10:42:58 <ais523> cpressey: I think there's still an ambiguity, as to whether stack operations look at a stack that's stored within κ, or at a separate global stack
2019-10-28 10:43:18 <ais523> I think the latter is more likely given the specification on the page but it doesn't rule out either possibility
2019-10-28 10:43:28 <cpressey> ais523_: κ is a function, there's nothing "stored within" it
2019-10-28 10:43:56 <ais523> OK, I guess that makes sense, functions-with-metadata aren't the sort of thing you expect to see unannounced
2019-10-28 10:44:08 <wib_jonas> ais523: the tape of stacks is passed around in a separate argument
2019-10-28 10:44:17 <wib_jonas> I still think there's only one of it, because there's no way to copy it
2019-10-28 10:44:22 <ais523> oh yes
2019-10-28 10:44:30 <wib_jonas> so I think you can imagine it as a separate global stack, and functions with just the continuation argument
2019-10-28 10:44:31 <ais523> so it definitely isn't part of the continuation as it has an argument of its own
2019-10-28 10:44:33 <shachaf> Ugh, the biggest problem with writing explicit state machines is that they don't compose well.
2019-10-28 10:45:02 <ais523> what notion of composition are you thinking of here? or do you not care?
2019-10-28 10:45:15 <ais523> there's more than one way I can think of to compose state machines
2019-10-28 10:45:37 <ais523> but those definitions seem to map to the explicit state machine notation fairly well?
2019-10-28 10:45:43 <shachaf> I mean, it's certainly possible.
2019-10-28 10:45:54 <shachaf> It's just much more awkward than function calls, in a language with no special support.
2019-10-28 10:46:38 <wib_jonas> shachaf: about the printf function state machine, what exactly does that mean? can you feed it the format pattern character by character? can it output the formatted output character by character? both?
2019-10-28 10:46:49 <ais523> oh, I see; state machines compose well in the sense of function composition (Haskell . or Underload *), but not in the sense of function application (Haskell $ or Underload ^)
2019-10-28 10:47:03 <shachaf> wib_jonas: No, you give it the format string all up-front. It produces output into a fixed size buffer.
2019-10-28 10:47:29 <wib_jonas> shachaf: I sort of think that allowing general custom formatters in a printf function is a waste, and I think when I write my printf function, I'll make it so that you can't do that. I'll still add some limited hooks, but they have to behave in restricted ways.
2019-10-28 10:47:31 <shachaf> I'm not quite sure what you mean by that.
2019-10-28 10:47:36 <ais523> although if you don't have recursion, you can statically allocate a state for every possible call stack
2019-10-28 10:47:49 <shachaf> Yes, you can build your own call stack effectively.
2019-10-28 10:47:59 <wib_jonas> shachaf: in what sense is it a state machine then? do you feed the arguments to be formatted one by one?
2019-10-28 10:48:14 <shachaf> wib_jonas: You provide all the arguments upfront too.
2019-10-28 10:48:22 <esowiki> 14[[07Oxcart14]]4 10 02https://esolangs.org/w/index.php?diff=66838&oldid=66837 5* 03Chris Pressey 5* (+291) 10Define what a continuation is in this instance
2019-10-28 10:49:02 <wib_jonas> shachaf: how is it a state machine then?
2019-10-28 10:49:51 <shachaf> It might be used something like this: sprintf_init(&state, fmt, va); while (!state.done) { char buf[4096]; int written = sprintf_chunk(&state, buf, sizeof buf); fwrite(buf, 1, written, stdout); }
2019-10-28 10:50:15 <shachaf> The normal sprintf API doesn't let you do that -- it requires you to allocate an arbitrary-sized buffer.
2019-10-28 10:51:03 <wib_jonas> shachaf: ah, so it's the second one that I said, it can continue output after it's ran out of a buffer
2019-10-28 10:51:21 <wib_jonas> interesting, and potentially useful
2019-10-28 10:51:31 <shachaf> Yes. I thought I said that but now I read my message again and it was unclear.
2019-10-28 10:51:40 <wib_jonas> shachaf: do you have a wrapper that lets it write to a file descriptor easily?
2019-10-28 10:51:44 <shachaf> I meant that each call puts some of the output into a fixed-size buffer.
2019-10-28 10:51:57 <shachaf> You can write a wrapper like that, can't you?
2019-10-28 10:52:12 <shachaf> I'm just worried about figuring out the core API that lets you write all the wrappers you want.
2019-10-28 10:52:26 <wib_jonas> shachaf: also, is it possible to define a formatter that formats a bignum in hexadecimal, where the output can be longer than a few of the output chunks?
2019-10-28 10:52:47 <shachaf> Formatters can produce arbitrary strings.
2019-10-28 10:52:53 <shachaf> That's the problem.
2019-10-28 10:53:00 <ais523> hmm, I wonder if it might be more efficient to simply restart the sprintf from the start with a larger buffer
2019-10-28 10:53:09 <ais523> rather than maintain all the state needed for restarting
2019-10-28 10:53:11 <ais523> not sure though
2019-10-28 10:53:12 <shachaf> Even the built-in formatters like %s have the same issue.
2019-10-28 10:53:29 <shachaf> What state needed for restarting?
2019-10-28 10:54:07 <ais523> the "state" parameter of your sprintf_init
2019-10-28 10:54:08 <shachaf> Certainly that state is no larger than a stack frame of snprintf's.
2019-10-28 10:54:23 <ais523> yes, it's not the size I'm concerned about, but the memory accesses used to update it
2019-10-28 10:54:55 <wib_jonas> as for that M:tG three card deck game, I think the start is successful because we've got 4 new players in round 1, and one of them won the round
2019-10-28 10:55:19 <shachaf> It's a very small amount of state.
2019-10-28 10:56:18 <shachaf> Other than the varargs, the state is less than two pointersworth.
2019-10-28 10:56:26 <wib_jonas> shachaf: it's not that simple. if you want to format big numbers in decimal (and they're stored in hexadecimal) then it's more efficient to do the conversion in one go, and that requires memory proportional to the size of the bignum
2019-10-28 10:56:56 <wib_jonas> mind you, it's sort of pointless to print bignums in decimal to full precision
2019-10-28 10:57:06 <shachaf> wib_jonas: Oh, well, you're free to allocate more memory and store it in your custom state, I guess.
2019-10-28 10:57:21 <shachaf> (Store a pointer to it, I mean.)
2019-10-28 10:57:24 <wib_jonas> sure
2019-10-28 10:57:48 <shachaf> I don't think efficiency is a huge concern here anyway.
2019-10-28 10:57:51 <wib_jonas> though now you need an abort function to deallocate the state if you don't want to continue the printf
2019-10-28 10:57:59 <shachaf> But of course it would be a big concern in fairly similar APIs.
2019-10-28 10:58:16 <shachaf> Yes, that's not ideal.
2019-10-28 10:58:30 <shachaf> Although you can just store your extra state in an arena probably.
2019-10-28 10:58:36 <ais523> oh, I assumed getting maximum efficiency would be the reason for something like this
2019-10-28 10:58:51 <ais523> (rather than simply counting the characters needed for the output buffer in advance)
2019-10-28 10:59:25 Joined: arseniiv
2019-10-28 10:59:25 Names: \oren\, ^[, ais523, aji, aloril, APic, arseniiv, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wib_jonas, wlp1s1, wmww, zemhill, zzo38
2019-10-28 10:59:31 <wib_jonas> I think I'll just use the more traditional approach where I call a callback when the output buffer runs out -- that callback can still give an error to abort, but I won't convert it to cps where you can pause the printf and store the state for later
2019-10-28 11:00:25 <ais523> hmm, if you can inline the callback, that's probably more efficient (it's less efficient if you have to call through a function pointer, especially given the workarounds needed for Spectre)
2019-10-28 11:00:36 <shachaf> I think state machine APIs are generally much nicer and more flexible.
2019-10-28 11:00:44 <wib_jonas> the callbacks are simply anyway, they either write, or allocate more memory, or always fail, plus in the first two cases there could be an output length limit that they obey
2019-10-28 11:01:50 <wib_jonas> ais523: it's not just the callback that helps, I can also enforce that I can call flush early and require that the output buffer is always at least, say, 64 bytes long, which means I don't need to worry about the callback during converting fixed integers or floating point numbers
2019-10-28 11:01:55 <ais523> (the currently recommended way of calling through a function pointer is to call yourself twice and then overwrite the return address for the second call on the stack with the address of the function you actually want to call; this guarantees that the function call will be mispredicted, thus preventing it being used as a Spectre gadget)
2019-10-28 11:02:10 User Name: oerjan = oerjan!oerjan@sprocket.nvg.ntnu.no
2019-10-28 11:02:10 <oerjan> <shachaf> cpressey: I think you copied some text from the Wagon page. . o O ( maybe cpressey is secretly A )
2019-10-28 11:02:16 <wib_jonas> (mind you, formatting floats is still tricky for other reasons)
2019-10-28 11:02:48 <ais523> you also need something that halts speculation at the address that you don't return to because it's overwritten
2019-10-28 11:02:49 <wib_jonas> a callback is effectively also what gnu libc and libstdc++ does
2019-10-28 11:03:04 <wib_jonas> for libc, you can define FILE handles with custom callbacks,
2019-10-28 11:03:27 <wib_jonas> for the C++ standard library, you can define custom classes for the output buffer
2019-10-28 11:04:06 <ais523> actually, the important point here isn't specifically that the call is mispredicted, rather it's that you statically know it'll be predicted to a specific value that's under your control (which prevents the predicted value being attacker-controlled)
2019-10-28 11:04:24 <wib_jonas> ais523: it might not even involve a function pointer, since I will probably only use three different behaviors
2019-10-28 11:04:31 <wib_jonas> possibly two because the last one isn't hard to unify
2019-10-28 11:04:35 <wib_jonas> I can just use conditionals
2019-10-28 11:04:40 <ais523> wib_jonas: right, sorry, I started on an aside
2019-10-28 11:04:52 <ais523> and then needed to make my aside as technically precise as possible, lest I end up misinforming someone
2019-10-28 11:05:05 <wib_jonas> sure, that's also important. for some things other than printf, you do want function pointers
2019-10-28 11:05:21 <ais523> oddly, the Spectre-proof indirect function call sequence is eerily similar to conditionals in INTERCAL-72
2019-10-28 11:05:35 <ais523> (not the same, but reminiscent)
2019-10-28 11:05:51 <esowiki> 14[[07Oxcart14]]4 M10 02https://esolangs.org/w/index.php?diff=66839&oldid=66838 5* 03Chris Pressey 5* (-64) 10Move where it is explained what "current continuation" refers to
2019-10-28 11:06:13 <shachaf> Do you like this style of API? https://gist.github.com/pervognsen/d57cdc165e79a21637fe5a721375afba
2019-10-28 11:06:23 <shachaf> (The one in that post and also the one it links to.)
2019-10-28 11:06:49 <wib_jonas> ais523: I really don't follow how sceptre-like prediction attacks can be prevented. at this point I sort of think I just have to buy separate (cheap) computer hardware to run the untrusted code on if I want to prevent all such attacks.
2019-10-28 11:07:41 <wib_jonas> separating things to separate computer hardware can be useful for other reasons too, as in to prevent various human errors that cause security bugs
2019-10-28 11:07:47 <ais523> wib_jonas: I believe the commonly accepted technique is to ensure that you have control over all locations to which a branch could possibly be predicted to lead, and then audit them to ensure that they can't leak information when running speculatively
2019-10-28 11:07:50 <wib_jonas> other than sceptre
2019-10-28 11:08:45 <wib_jonas> ais523: how can that be possible? you can guarantee that the cpu can't falsely speculatively predict a location?
2019-10-28 11:08:55 <ais523> it's not as bad as it seems; most branches can only be predicted as taken or not taken, so there are only two places to check, and compilers can verify that, e.g., you don't make any memory accesses via potentially attacker-controlled pointers
2019-10-28 11:09:11 <wib_jonas> I thought the jump target prediction is such that you can't do that
2019-10-28 11:09:18 <ais523> the crazy workarounds are needed for indirect branches and indirect function calls, which could lead anywhere
2019-10-28 11:09:30 <ais523> so you need to control the prediction yourself
2019-10-28 11:09:38 <wib_jonas> because it would, like, predict targets of unrelated jumps if it doesn't recall the jump instructino that you're trying to predict
2019-10-28 11:10:05 <ais523> that's why you go via a function call and then rewrite the return value on the stack, because if you make a function call followed by a return, it's always predicted to return to the place the call came from
2019-10-28 11:10:29 <wib_jonas> hmm
2019-10-28 11:10:43 <cpressey> oerjan: That's one of more frightening Jekyll-and-Hyde theories I've heard lately. Perhaps I've been sleepwalking (and sleepwikiediting)
2019-10-28 11:10:44 <wib_jonas> that could work, if you're careful not to confuse the return address cache
2019-10-28 11:10:55 <wib_jonas> there's a separate return target cache from the usual stack cache, right?
2019-10-28 11:11:18 <ais523> wib_jonas: actually it's the opposite of "careful not to confuse", you're intentionally confusing the return address stack
2019-10-28 11:12:07 <wib_jonas> which theory? the one where every esoteric language author is secretly the same person?
2019-10-28 11:12:18 <wib_jonas> ais523: yes, but after that
2019-10-28 11:12:25 <wib_jonas> dunno, it could work
2019-10-28 11:12:29 <ais523> the point is simply to make sure you have a known value on the return address predictor so that it can't be attacker-controlled
2019-10-28 11:12:37 <wib_jonas> but the whole sceptre prevention seems hopelessly large in scope to me
2019-10-28 11:13:06 <ais523> well, it's at the point where the known spectre variants can be automatically fixed by compilers
2019-10-28 11:13:22 <ais523> there are probably unknown speculative-execution-related exploits, but at least the known ones were fixable
2019-10-28 11:13:40 <wib_jonas> ok
2019-10-28 11:14:37 <wib_jonas> though I am hoping that most of them will be fixed in new hardware, so in like 15 years all the cpu with most of the vulnerabilities will be phased out
2019-10-28 11:15:41 <wib_jonas> that's like a close enough timescale that I'll probably still be alive and programming for cpus then
2019-10-28 11:18:03 <shachaf> If you don't support user-defined formats, it's probably simple enough.
2019-10-28 11:18:16 Quit: LKoen (Remote host closed the connection)
2019-10-28 11:18:16 Names: \oren\, ^[, ais523, aji, aloril, APic, arseniiv, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wib_jonas, wlp1s1, wmww, zemhill, zzo38
2019-10-28 11:18:56 User Name: arseniiv = arseniiv!~arseniiv@94.41.13.149.dynamic.ufanet.ru
2019-10-28 11:18:56 <arseniiv> <shachaf> Do you like this style of API? => interesting
2019-10-28 11:19:09 <shachaf> I think %s is the only arbitrary-length format? You can just rerun the other ones if they happen to cross a boundary.
2019-10-28 11:19:28 <shachaf> Or even just store a fixed-size buffer of what's left in the current argument.
2019-10-28 11:19:38 Joined: LKoen
2019-10-28 11:19:38 Names: \oren\, ^[, ais523, aji, aloril, APic, arseniiv, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wib_jonas, wlp1s1, wmww, zemhill, zzo38
2019-10-28 11:20:23 <wib_jonas> although then we'll still have to worry about how to make efficient but secure quantum-attack resistant public key cryptography primitives. if the crypto theorists don't figure out soon, every fricking ssl handshake will take centiseconds because we can't do a key exchange without number theory.
2019-10-28 11:21:42 <shachaf> But what's the right thing to do for custom formatters?
2019-10-28 11:21:59 <shachaf> I could declare that they just can't produce more than 64 bytes of output.
2019-10-28 11:23:04 <wib_jonas> shachaf: I wouldn't allow them in general. I'll have to figure out something to allow bignum formatters, and those can produce long output, plus I will allow custom complex types, but I'll format them with built-in formatters, it's just a type system magic that disappears at compile time.
2019-10-28 11:23:56 <shachaf> I have types like struct V2 { F32 x, y; };.
2019-10-28 11:24:02 <shachaf> It seems pretty useful to be able to format them.
2019-10-28 11:24:23 <shachaf> I don't expect a huge number of custom formatters but it'll be nice to have the common ones.
2019-10-28 11:24:37 <wib_jonas> shachaf: printf("(%f,%f)", p.x, p.y);
2019-10-28 11:24:56 <wib_jonas> replace the "%f" with whatever specific format you want obviously
2019-10-28 11:25:51 <wib_jonas> for more complicated cases, the users can write a formatter function that doesn't hook into printf
2019-10-28 11:26:00 <arseniiv> from the link there: “API design is still considered a black art of programming, even today. Only little information can be found and mostly you just find small tips I hope every programmer already knows.” => BTW there are no books on that, really? With yet many books on code style practices?
2019-10-28 11:26:02 <wib_jonas> but can use the same output buffer solutino as your printf
2019-10-28 11:26:31 <wib_jonas> so you don't mix them in the same printf format string, but you can mix them into the same output file or output buffer or whatever you can output to
2019-10-28 11:26:39 <wib_jonas> I think your api still allows that
2019-10-28 11:27:08 <shachaf> arseniiv: I don't think there are many good books on that sort of thing.
2019-10-28 11:27:58 <ais523> I think API design is in part a language design problem
2019-10-28 11:28:15 <ais523> APIs are influenced so much by the language you're calling them from
2019-10-28 11:28:34 <ais523> I have a theory that perhaps, in a sufficiently tightly defined language, there would only be one obvious way to write any given API
2019-10-28 11:29:00 Quit: wib_jonas (Remote host closed the connection)
2019-10-28 11:29:00 Quit: ais523 (Remote host closed the connection)
2019-10-28 11:29:00 Names: \oren\, ^[, aji, aloril, APic, arseniiv, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
2019-10-28 11:29:24 Joined: ais523
2019-10-28 11:29:24 Names: \oren\, ^[, ais523, aji, aloril, APic, arseniiv, Bowserinator, BWBellairs, Cale, catern, clog, cpressey, Deewiant, diginet, dingwat, diverger, dog_star, economicsbat, erdic, esowiki, FaeFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumboo, haavard, HackEso, hakatashi1, heroux, Hooloovo0, howlands, ineiros, int-e, interruptinuse, iovoid, j4cbo, jix, joast, kmc, lambdabot, LBPHacker, lf94, lifthrasiir, LKoen, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, ocharles, oerjan, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, Scrooge, sebbu, sftp, Sgeo, shachaf, shig, shikhin, ski, skyplane, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex, wlp1s1, wmww, zemhill, zzo38
