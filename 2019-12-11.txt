2019-12-11 00:11:44 Quit: FreeFull (Quit: Sleep)
2019-12-11 00:11:44 Names: ^[, aji, aloril, APic, arseniiv, ArthurStrong, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, ineiros, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill
2019-12-11 00:33:10 <fizzie> Axiom of Verge.
2019-12-11 00:58:31 <int-e> fungot: do you plundervolt?
2019-12-11 00:58:31 <fungot> int-e: not the nth? i didn't vote for either of these been used for any significant sites?
2019-12-11 01:11:28 <arseniiv> fungot: what is your nth-child?
2019-12-11 01:11:28 <fungot> arseniiv: not if you stopped working on it, or lump it.' many compilers will optimize them to the site and got the most interesting code is in
2019-12-11 01:11:57 <arseniiv> a poor optimized child
2019-12-11 01:12:46 <arseniiv> int-e: I‚Äôd prefer an axiom of chocolate!
2019-12-11 01:12:54 <arseniiv> or maybe not
2019-12-11 01:13:42 <int-e> axiom of chocolate: the darker the better
2019-12-11 01:14:29 <int-e> (Though honestly I'm not sure about the 90%+ area.)
2019-12-11 01:14:48 <fizzie> Someone had left some super-bitter "98%" or whatever chocolate at the snack area, I think that was kind of overdoing it.
2019-12-11 01:15:01 <fizzie> There were like six or eight different kinds, and they were all like that.
2019-12-11 01:15:07 <fizzie> I'm sure it's healthty, but still.
2019-12-11 01:15:44 <int-e> heh, I don't eat chocolate because it's healthy (or not)
2019-12-11 01:16:50 <int-e> But I just realized that I have some 85% chocolate around.
2019-12-11 01:17:14 Quit: arseniiv (Ping timeout: 246 seconds)
2019-12-11 01:17:15 Names: ^[, aji, aloril, APic, ArthurStrong, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, ineiros, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill
2019-12-11 01:17:18 <int-e> And that's quite good :)
2019-12-11 01:20:25 <fizzie> That sounds reasonable enough.
2019-12-11 01:21:09 <int-e> I had some super high % chocolate and found that it was ... dry, almost dusty.
2019-12-11 01:21:24 <shachaf> Do you like B-trees?
2019-12-11 01:21:42 <shachaf> I don't like dark chocolate.
2019-12-11 01:21:50 <int-e> So yeah, I share some super dark chocolate skepticism.
2019-12-11 01:22:18 <int-e> shachaf: What's the difference between B+ and B* trees?
2019-12-11 01:22:57 <shachaf> I think there are a lot of different points in B-tree design space, and people named a few of those points, but mostly not the ones I actually want to use.
2019-12-11 01:23:35 <shachaf> B+ trees store values only in the leaves (reasonable), and also have links between leaf nodes (is that that important?).
2019-12-11 01:23:59 <shachaf> B* trees will share keys with both left and right siblings, I think, so nodes can be 2/3 full?
2019-12-11 01:24:28 <shachaf> The point is: I thought B-trees were annoying and complicated until recently, when I thought about them. Now I think they're simple.
2019-12-11 01:24:45 <int-e> Hmm, is that that important --> for external storage, I imagine it may help for linear scans?
2019-12-11 01:25:25 <shachaf> Sure. I mean, it seems like a reasonable optimization for some uses, but you make lots of those when you implement things in practice.
2019-12-11 01:25:28 <int-e> (But I didn't really expect any answers.)
2019-12-11 01:29:55 <int-e> fungot: do you like side-stepping questions?
2019-12-11 01:29:55 <fungot> int-e: that wraps functions... and just eval it in some ways
2019-12-11 01:30:07 <shachaf> Wait, which question did I side-step?
2019-12-11 01:30:19 <int-e> shachaf: that wasn't about you
2019-12-11 01:30:37 <int-e> I've realized that I've identified a thing that *I* like.
2019-12-11 01:30:39 <shachaf> But everything is about me.
2019-12-11 01:31:31 <int-e> shachaf: Fine. You were the muse, the catalyst.
2019-12-11 01:31:57 <shachaf> `? shachaf
2019-12-11 01:31:59 <HackEso> Queen Shachaf of the Dawn spr¯ som selleri and cosplays Nepeta Leijon on weekends. He hates bell peppers with a passion. He doesn't know when to stop asking questions. We don't like this.
2019-12-11 01:32:17 <shachaf> `learn shachaf spr¯ som selleri and is the muse, the catalyst.
2019-12-11 01:32:54 <int-e> No more passion fruits?
2019-12-11 01:33:20 <shachaf> `? bell pepper
2019-12-11 01:33:22 <HackEso> bell pepper? ¬Ø\(¬∞‚Äã_o)/¬Ø
2019-12-11 01:33:35 <shachaf> whoa
2019-12-11 01:33:41 <shachaf> Unicode has two code points with the same name?
2019-12-11 01:33:59 <shachaf> U+7 and U+1F514
2019-12-11 01:35:02 <shachaf> I think I knew that once.
2019-12-11 01:36:13 <int-e> No bell pepper? Only üå∂...
2019-12-11 01:36:37 <int-e> @google üîîüå∂
2019-12-11 01:36:39 User Name: lambdabot = lambdabot!~lambdabot@haskell/bot/lambdabot
2019-12-11 01:36:39 <lambdabot> http://www.google.com/url?q=https://www.dailykos.com/story/2019/4/19/1849291/-PWB-Freidai-Follies-and-Foolishness
2019-12-11 01:36:39 <lambdabot> Title: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏–∏
2019-12-11 01:37:47 <int-e> Weird page. Oh well, I don't know what I was trying to find there anyway.
2019-12-11 01:38:43 <int-e> ``unidecode üó≠ # not for Democrats?
2019-12-11 01:38:44 <HackEso> ‚Äã`unidecode? No such file or directory
2019-12-11 01:38:48 <int-e> `` unidecode üó≠ # not for Democrats?
2019-12-11 01:38:50 <HackEso> ‚Äã[U+1F5ED RIGHT THOUGHT BUBBLE]
2019-12-11 01:39:22 <int-e> `` unidecode üó¨ # this one also exists, of course
2019-12-11 01:39:24 <HackEso> ‚Äã[U+1F5EC LEFT THOUGHT BUBBLE]
2019-12-11 01:40:04 <int-e> `` unidecode üóØ # haha!
2019-12-11 01:40:12 <HackEso> ‚Äã[U+1F5EF RIGHT ANGER BUBBLE]
2019-12-11 01:40:23 <shachaf> Where's my RIGHTEOUS ANGER BUBBLE?
2019-12-11 01:41:53 <int-e> `? shachaf
2019-12-11 01:41:54 <HackEso> Queen Shachaf of the Dawn spr¯ som selleri and cosplays Nepeta Leijon on weekends. He hates bell peppers with a passion. He doesn't know when to stop asking questions. We don't like this.
2019-12-11 01:42:08 * int-e is missing something
2019-12-11 01:43:37 <int-e> Ah, a ^O.
2019-12-11 01:55:11 Joined: Lord_of_Life
2019-12-11 01:56:55 Quit: Lord_of_Life (Ping timeout: 265 seconds)
2019-12-11 01:56:55 Nick Change: Lord_of_Life -> Lord_of_Life
2019-12-11 03:08:33 Joined: elliemae
2019-12-11 03:08:33 Names: ^[, aji, aloril, APic, ArthurStrong, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, dnm, dog_star, elliemae, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, ineiros, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill
2019-12-11 03:50:03 Quit: elliemae (Remote host closed the connection)
2019-12-11 03:50:03 Names: ^[, aji, aloril, APic, ArthurStrong, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, ineiros, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill
2019-12-11 03:52:45 <int-e> fungot: hh and cc or hpp and cpp?
2019-12-11 03:52:45 <fungot> int-e: someone is either up very late, which can be checked
2019-12-11 03:58:01 <fizzie> h and cc hth
2019-12-11 03:59:24 <shachaf> h++ and c++ hth
2019-12-11 03:59:55 <shachaf> hmm
2019-12-11 03:59:58 <shachaf> h and c hth
2019-12-11 04:01:20 <int-e> shachaf: But I like a language strictly between C and C++... basically C++ without dynamic methods (and consequently, very limited inheritance).
2019-12-11 04:01:39 <int-e> dynamic -> virtual
2019-12-11 04:02:49 <shachaf> What's the benefit of inheritance at all?
2019-12-11 04:04:28 <int-e> You can still have some limited aggregation going on.
2019-12-11 04:05:09 <int-e> Only extending interfaces and functionality... no overloading of methods or things will quickly become insane.
2019-12-11 04:06:06 <int-e> (virtual methods are what keep this sane)
2019-12-11 04:06:55 <shachaf> Wait, are you for or against virtual methods?
2019-12-11 04:06:59 <int-e> The main thing I want is that every (struct/class) type has an associated namespace.
2019-12-11 04:07:42 <int-e> shachaf: It depends? They are essential for OO. I don't want to do OO though.
2019-12-11 04:07:45 <shachaf> I've been wondering how important that is for a while.
2019-12-11 04:08:12 <shachaf> Is there a big advantage to x.f() over foo(x)?
2019-12-11 04:08:49 <shachaf> I meant x.foo(), of course.
2019-12-11 04:08:52 <int-e> Little, if you can overload foo().
2019-12-11 04:10:04 <int-e> But C can't overload functions either.
2019-12-11 04:10:46 <int-e> I think there's an advantage over having x.foo() or foo(x) vs. having to write type_foo(x) where 'type' happens to be the type of x.
2019-12-11 04:11:44 <int-e> I'm not a very fast typist, so that kind of redundancy really hurts.
2019-12-11 04:14:11 <int-e> I also find chaining of operations attractive... if you have  struct T { T &set_foo(); T &set_bar(); }; T t; and do t.set_foo().set_bar().
2019-12-11 04:15:40 <shachaf> I like (T){.foo = x, .bar = y};
2019-12-11 04:15:53 <shachaf> Which C has had for 20 years and maybe C++ is finally getting?
2019-12-11 04:17:19 <int-e> Anyway, if you were to add methods to structs in C I might consider using it again ;) )
2019-12-11 04:17:42 <shachaf> type_foo has the benefit that you can search for it.
2019-12-11 04:18:30 <int-e> Yes, we all rationalize our own choices.
2019-12-11 04:18:54 <shachaf> I said a few lines ago that I've been wondering about it for a while.
2019-12-11 04:19:08 <shachaf> In particular I mean that I'm not sure whether it's a good idea or not.
2019-12-11 04:21:41 <int-e> It doesn't help C's case that it's largely a subset of C++. (The field initialisers are a good point, of course.)
2019-12-11 04:22:20 <int-e> So basically the moment a person (like me) finds /anything/ they like in C++, they are tempted to switch.
2019-12-11 04:23:31 <shachaf> whoa, I just realized how my own program worked.
2019-12-11 04:23:38 <int-e> Btw I also find the  iostream  and  iomanip  stuff cute.
2019-12-11 04:23:40 <shachaf> I had a bug which turned out to be a clever trick.
2019-12-11 04:23:57 <shachaf> It did exactly the right thing. I'm going to document it and pretend it was what I meant to do all along.
2019-12-11 04:24:28 <shachaf> Wait a minute, no. Hmm.
2019-12-11 04:24:28 <int-e> Been a while since I've done that, but yeah... those are interesting experiences.
2019-12-11 04:25:08 <int-e> Well, the last time was actually code that I /knew/ couldn't work, that turned out to work /most/ of the time (much more often than it reasonably should), but not always :)
2019-12-11 04:25:39 <int-e> I was really glad when I finally discovered that it did, in fact, break.
2019-12-11 04:26:20 <int-e> (This was with last month's Ponder This, in code updating determinants which worked with insufficient precision... and still produced exact results most of the time.)
2019-12-11 04:26:37 <shachaf> https://slbkbs.org/tmp/b-trees.txt
2019-12-11 04:28:20 <int-e> The time before that was an overzealous (by my understanding at the time of writing it) check in a combinatorial search procedure which I could later justify to actually be valid (for quite subtle reasons).
2019-12-11 04:28:58 <int-e> "overzealous check" -- this was for pruning a search tree, so I pruned more than I thought I could.
2019-12-11 04:30:57 <int-e> shachaf: funny, I always think of B+-trees as 2-3-4-trees, only wider.
2019-12-11 04:31:22 <int-e> And 2-3-4-trees are 2-3-trees with lazier splitting.
2019-12-11 04:31:39 <shachaf> I always think of red-black trees as 2-3-4 trees.
2019-12-11 04:32:12 <int-e> (Are B- -trees those that can have between n and 2n-1 children at each node?)
2019-12-11 04:32:42 <int-e> I usually don't think of red-black trees at all.
2019-12-11 04:33:08 <shachaf> Did you know they just encode 2-3-4 trees?
2019-12-11 04:33:55 <shachaf> Anyway, I like this array perspective.
2019-12-11 04:34:01 <int-e> but yeah, if I have to, I collapse it to a 2-3-4 tree.
2019-12-11 04:34:22 <shachaf> I think just about all the operations are obvious from this viewpoint.
2019-12-11 04:34:35 <int-e> AVL trees make so much more sense to me.
2019-12-11 04:37:08 <int-e> shachaf: I think the array perspective is one of many possible views and it's impossible to say which view clicks for any particular person.
2019-12-11 04:39:00 <int-e> Obviously /some/ sort of array is inherent in any Bx-tree because a flat array is what you get for very small data sets.
2019-12-11 04:39:28 <shachaf> I mean, I've written a bunch of B-tree code in the past, I was already familiar with the data structure.
2019-12-11 04:39:42 <int-e> And observing some sort of chunking at the leafs when you flatten the tree is also inevitable.
2019-12-11 04:40:33 <int-e> But whether you view the thing top-down, emphasizing the tree structure, or bottom-up, empahsizing the (chunked) flattened array... is up to you.
2019-12-11 04:42:12 <int-e> If you do it bottom-up, you get intermediate forests as you group consecutive chunks under a common ancestor node.
2019-12-11 04:42:38 <int-e> So it's arrays all the way up. ;)
2019-12-11 04:42:46 <int-e> But trees all the way down.
2019-12-11 04:43:29 <shachaf> It's plausibly reasonable to use different kinds of indexing for blocks and for values.
2019-12-11 04:43:42 <shachaf> Since they're very different sizes.
2019-12-11 04:46:10 <int-e> Btw, I don't know if anything of what I just wrote made any sense. But I'm very happy with the last two lines.
2019-12-11 04:48:14 <int-e> Okay, bedtime.
2019-12-11 04:50:10 <shachaf> C++'s std::map is usually a red-black tree.
2019-12-11 04:50:12 <shachaf> I'm not sure why.
2019-12-11 05:31:52 Joined: Frater_EST
2019-12-11 05:31:53 Names: ^[, aji, aloril, APic, ArthurStrong, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, dnm, dog_star, erdic, esowiki, FireFly, fizzie, Frater_EST, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, ineiros, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill
2019-12-11 05:45:00 Quit: ArthurStrong (Quit: leaving)
2019-12-11 05:45:00 Names: ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, dnm, dog_star, erdic, esowiki, FireFly, fizzie, Frater_EST, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, ineiros, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill
