2019-12-03 00:05:23 <imode-ruby> sorry, should've clarified what I meant by "commands". bot commands are fine. controlling the bot via PRIVMSG is.. not fine.
2019-12-03 00:08:55 <fizzie> AIUI, it wasn't really a matter of controlling the bot through any sort of intended control commands, more tricking it into messaging things to NickServ.
2019-12-03 00:09:23 <imode-ruby> mhm. if you can PRIVMSG anything, you can hijack it.
2019-12-03 00:17:59 <b_jonas> FireFly: sorry, you said you wanted to experiment with the bot later, but now you can't
2019-12-03 00:25:11 Quit: FreeFull
2019-12-03 00:25:11 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, LKoen, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 00:36:34 <fizzie> BT has this thing called "InLinkUK", it's like a digital advertising sign they've installed on sidewalks + free wifi access point + some sort of tablet you can use in kiosk mode for "information". Except it had crashed, and the advertising screen was saying "Ubuntu 15.04 adl-uk-002661 tty1" and "adl-uk-002661 login: _"
2019-12-03 00:39:03 <fizzie> I like it when screens like this are showing things they shouldn't be showing.
2019-12-03 00:48:51 <kmc> me too
2019-12-03 00:49:28 <kmc> https://www.reddit.com/r/bayarea/comments/e4so9b/for_all_you_programmers_bart_at_least_the_station/
2019-12-03 00:49:40 <kmc> the farecard readers on the new MUNI trains run embedded Windows
2019-12-03 00:49:54 <kmc> I saw one of them crashed to the desktop screen once, start menu and all
2019-12-03 01:13:50 Quit: LKoen (Quit: ‚ÄúIt‚Äôs only logical. First you learn to talk, then you learn to think. Too bad it‚Äôs not the other way round.‚Äù)
2019-12-03 01:13:50 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 02:04:56 User Name: esowiki = esowiki!~esowiki@unaffiliated/fizzie/bot/esowiki
2019-12-03 02:04:56 <esowiki> 14[[07User:DMC14]]4 M10 02https://esolangs.org/w/index.php?diff=67605&oldid=62538 5* 03DMC 5* (+98) 10
2019-12-03 02:05:13 <esowiki> 14[[07User:DMC14]]4 M10 02https://esolangs.org/w/index.php?diff=67606&oldid=67605 5* 03DMC 5* (-7) 10
2019-12-03 02:06:20 Joined: oerjan
2019-12-03 02:06:20 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 02:10:54 User Name: oerjan = oerjan!oerjan@sprocket.nvg.ntnu.no
2019-12-03 02:10:54 <oerjan> <wib_jonas> oerjan: I found a loop <-- wait, it sees its own messages? i thought that didn't happen no matter who it sends to
2019-12-03 02:11:56 <fizzie> You do if you send to yourself.
2019-12-03 02:12:16 <oerjan> aha
2019-12-03 02:12:22 <shachaf> `u 5 w
2019-12-03 02:12:23 <HackEso> u? No such file or directory
2019-12-03 02:12:29 <shachaf> Hmm.
2019-12-03 02:12:31 <shachaf> `h 5 w
2019-12-03 02:12:32 <HackEso> 5 w
2019-12-03 02:12:38 <shachaf> What was it?
2019-12-03 02:12:39 <oerjan> shachaf: `t hth
2019-12-03 02:12:52 <shachaf> `? t
2019-12-03 02:12:53 <HackEso> t? ¬Ø\(¬∞‚Äã_o)/¬Ø
2019-12-03 02:12:56 <oerjan> (i renamed it for keyboard pressing shortness)
2019-12-03 02:12:57 <shachaf> What does that stand for?
2019-12-03 02:12:57 <fizzie> `? u
2019-12-03 02:12:58 <HackEso> u? ¬Ø\(¬∞‚Äã_o)/¬Ø
2019-12-03 02:13:01 <fizzie> "top"?
2019-12-03 02:13:02 <oerjan> "top"
2019-12-03 02:13:13 <shachaf> Why is t shorter than u?
2019-12-03 02:13:15 <shachaf> `t 5 w
2019-12-03 02:13:18 <HackEso> 1/2:necessity//If necessity did not exist, it would be necessary for Taneb to invent it. \ prooftechnique//prooftechnique nÈ NihilistDandy: He was there some time ago. Maybe he'll come back. Maybe he's a nihilist, too. (Note from the Editor: He came back, and is a nihilist.) He is inevitably on a mathematical descent. \ double dactyl//Curious spurious juvenile poetry that is supposedly tricky to write, but its obsession with sesquipeda
2019-12-03 02:13:21 <shachaf> `n
2019-12-03 02:13:21 <HackEso> 2/2:ity makes double dactyls quite gaudy and trite. \ cut elimination//The cut-elimination theorem states that any Prolog program written using the cut operator ! can be rewritten without using that operator. \ nvd//nvd is what Taneb calls himself when he wants to feel professional.
2019-12-03 02:14:03 <oerjan> (of course my muscle memory for how to use ` pretty much means i don't make use of the simpler typing, but there you go)
2019-12-03 02:14:16 <fizzie> Do you actually need `t for 5 w?
2019-12-03 02:15:05 <oerjan> shachaf: it's shorter if ` is a dead key, because then `u = ˘ but `t isn't a special combination (at least on my keyboard)
2019-12-03 02:15:47 <oerjan> ProofTechnique: hey you're here!
2019-12-03 02:16:06 <oerjan> oh the note mentions
2019-12-03 02:16:08 User Name: ProofTechnique = ProofTechnique!sid79547@gateway/web/irccloud.com/x-rmvtyfjhbboovfqk
2019-12-03 02:16:08 <ProofTechnique> Helloerjan!
2019-12-03 02:16:38 * oerjan ups the ante for duplicate responding by not even reading until the end of the line
2019-12-03 02:16:39 <shachaf> oerjan: Aha. But deadkeys are scow.
2019-12-03 02:16:48 <fizzie> IMO, with a compose key, compose-`-? should compose ` onto absolutely anything, using a COMBINING GRAVE ACCENT. But it doesn't, here.
2019-12-03 02:17:09 <shachaf> fizzie: Can Compose enter multiple code points?
2019-12-03 02:17:30 <oerjan> fizzie: i don't think so
2019-12-03 02:18:11 <fizzie> I don't really know. Though I can type a tÃÄ by starting with a t, then holding down ctrl-shift and typing 0300. But that's the urxvt code point entry feature.
2019-12-03 02:18:38 <oerjan> `5 echo hi
2019-12-03 02:18:39 <HackEso> 1/1:hi \ hi \ hi \ hi \ hi
2019-12-03 02:18:58 <oerjan> hum i guess that proves nothing
2019-12-03 02:18:59 <fizzie> `` 5 'echo ho'  # it's christmas
2019-12-03 02:19:01 <HackEso> 1/1:ho \ ho \ ho \ ho \ ho
2019-12-03 02:19:03 <shachaf> `t t 5 t w
2019-12-03 02:19:06 <HackEso> 1/1:bleen//Bleen is the color of the ocean and the trees. \ i//I SIGNIFICAT NVMERVM VNVM \ burma//Burma: Ask Bike \ nth//nth is not that helpful \ nooooodle//Noooooodles are the invention of the Chinese. They were brought to Europe by Marco Polo, a distant ancestor of Taneb.
2019-12-03 02:19:53 <oerjan> Bike is not here though. at least by that nick.
2019-12-03 02:20:52 <fizzie> Where did I see a Burma-Shave thing recently? Maybe a random xkcd.
2019-12-03 02:21:21 <fizzie> There's one in https://xkcd.com/491 but I think it was something else instead maybe.
2019-12-03 02:25:58 <ProofTechnique> I wonder if anyone's ever done a whale-themed cover of Jolene.
2019-12-03 02:32:17 <oerjan> Jooooowoooowwooooowwooo...
2019-12-03 02:39:48 <oerjan> ProofTechnique: feel free to implement the obvious /hackenv/bin/whale command hth
2019-12-03 02:40:19 * oerjan won't due to a sudden attack of good taste
2019-12-03 02:40:35 <ProofTechnique> That's a first
2019-12-03 02:40:41 <int-e> The question "Are you whales from Scotland?" pops into your mind for no discernably reason.
2019-12-03 02:42:39 * oerjan googles and learns new horrible joke, balancing out his good taste
2019-12-03 02:43:02 <int-e> happy to share
2019-12-03 02:46:23 <int-e> The good thing about terrible jokes is that they're easy to remember ;)
2019-12-03 03:00:25 <oerjan> =list
2019-12-03 03:00:33 <oerjan> oh it's gone
2019-12-03 03:01:08 * oerjan saw b_jonas misspell one of his awkwardly named commands and wanted to check if the misspelled version existed
2019-12-03 03:02:12 <oerjan> because if not, i think there was another "fascinating effect" involved in bfbot's response to that
2019-12-03 03:03:36 <oerjan> oh there was a logic to the naming
2019-12-03 03:11:37 Joined: tromp
2019-12-03 03:11:38 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 03:15:59 Quit: tromp (Ping timeout: 246 seconds)
2019-12-03 03:16:00 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 03:29:40 <esowiki> 14[[07IBC14]]4 10 02https://esolangs.org/w/index.php?diff=67607&oldid=67112 5* 03Quadril-Is 5* (+99) 10
2019-12-03 03:45:06 Joined: imode
2019-12-03 03:45:06 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 04:02:19 <oerjan> <b_jonas> Is this too evil? <-- really really bad judgement at the very least.
2019-12-03 04:05:27 <oerjan> and a horrible precedent for this channel.
2019-12-03 04:06:18 Joined: tromp
2019-12-03 04:06:18 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 04:06:48 <oerjan> and don't ask me if it's even legal.
2019-12-03 04:10:53 Quit: tromp (Ping timeout: 276 seconds)
2019-12-03 04:10:53 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 04:10:58 <oerjan> admittedly the bot probably needs to be kept off until fixed.
2019-12-03 04:12:26 <oerjan> b_jonas: you could have phrased that a lot less confrontational, though.
2019-12-03 04:12:32 <zzo38> If you do not try to register it, I do not have a problem with it since if they want to register it themself then they can do so and use NS GHOST to force a disconnect
2019-12-03 04:12:50 <oerjan> zzo38: except that's exactly what he did
2019-12-03 04:13:30 <zzo38> Yes, but I think that isn't what should be done. Instead just use a persistent connection, I think, is better
2019-12-03 04:14:20 <oerjan> zzo38: i am confused what problem you are thinking that solves
2019-12-03 04:14:47 <oerjan> the problem is that bfbot was online, completely abusable, and its owner wasn't.
2019-12-03 04:15:35 <oerjan> and b_jonas used its abusability to get it disconnected.
2019-12-03 04:15:57 <oerjan> by a method which required him registering it. i'm not sure whether another would have worked.
2019-12-03 04:16:11 <zzo38> Would it work to only temporarily register it?
2019-12-03 04:16:18 <zzo38> If so, then that is what should be done.
2019-12-03 04:16:47 <oerjan> oh he also set nick protection to prevent it from reconnecting, i think.
2019-12-03 04:17:27 <oerjan> which is the thing that cannot be done temporarily, i guess.
2019-12-03 04:18:18 <zzo38> If it automatically reconnects, that isn't your fault. If it tries to rejoin the channel, then you can add a ban and then remove it later. If it does a wrong thing by a private message, filter them out on your client. Other than that, I think just leave it.
2019-12-03 04:19:02 <oerjan> zzo38: the thing is that it was so abusable that a person could use it against a third party
2019-12-03 04:19:23 <zzo38> That isn't up to you, though. Just let it; the third party can filter it out themself if they do not want it.
2019-12-03 04:19:57 <zzo38> But if you are really concerned, I suppose notify the server operator they can decide whether or not to do anything about it.
2019-12-03 04:19:58 <oerjan> also, it was on #esoteric-blah which has no ops
2019-12-03 04:20:15 <zzo38> If it is a channel with no ops then just it be on there.
2019-12-03 04:20:22 <oerjan> (well, it has staff so we could ask FireFly i guess)
2019-12-03 04:21:40 <oerjan> oh wait it's freenode-staff which isn't the same thing.
2019-12-03 04:22:34 <oerjan> (just a dummy account to hold channels i think)
2019-12-03 04:24:34 <zzo38> I think you should not interfere other people's channel if it can be use on a channel that has no ops then it should just let be on there, and if you do not want to receive their messages then you can filter in the client side. If it causes problems with the server, then the server operator should learn about it in order to remove it.
2019-12-03 04:24:55 <oerjan> @tell kspalaiologos I see b_jonas may have gone a bit too far to quit your bot. it was _really_ unsecure though (which is how he could).
2019-12-03 04:24:55 <lambdabot> Consider it noted.
2019-12-03 04:25:59 <oerjan> trying some de-escalation
2019-12-03 04:30:49 <zzo38> If they do not want any channel operators then should not have any; unfortunately Freenode doesn't have the channel with + prefix to indicate this explicitly. They should, in order that it can easily be indicated if you want + or #
2019-12-03 04:59:11 Joined: tromp
2019-12-03 04:59:11 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 05:00:25 Joined: tromp
2019-12-03 05:03:26 Quit: tromp (Ping timeout: 246 seconds)
2019-12-03 05:04:50 Quit: tromp (Ping timeout: 246 seconds)
2019-12-03 05:04:51 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 05:09:58 Joined: Lord_of_Life
2019-12-03 05:11:59 Quit: Lord_of_Life (Ping timeout: 276 seconds)
2019-12-03 05:11:59 Nick Change: Lord_of_Life -> Lord_of_Life
2019-12-03 05:25:27 <zzo38> I think is strange that the /proc/*/fd/* pretend to be symlinks but don't really work like symlinks. It seem like it would be like a "special link" instead?
2019-12-03 05:27:55 <kmc> in what way don't they act like symlinks?
2019-12-03 05:28:27 <zzo38> I think they can refer to deleted files and to anonymous stuff, and symlinks can't
2019-12-03 05:28:32 <kmc> is it because they may refer to anonymous things?
2019-12-03 05:28:33 <kmc> right
2019-12-03 05:29:10 <kmc> keegan@localhost:~$ ls -l /proc/self/fd | grep pipe
2019-12-03 05:29:10 <kmc> l-wx------ 1 keegan keegan 64 Dec  2 21:29 1 -> pipe:[6737388]
2019-12-03 05:29:15 <kmc> wonder what that number means
2019-12-03 05:29:17 <shachaf> Can you distinguish between a deleted file and a link to a file ending in ' (deleted)'?
2019-12-03 05:29:24 <kmc> lolol
2019-12-03 05:29:32 <kmc> you mean without a race condition?
2019-12-03 05:29:40 <shachaf> I mean at all, I think?
2019-12-03 05:30:03 <kmc> well you could try to readlink then open
2019-12-03 05:30:04 <shachaf> If you have a program that opens /foo, and you delete foo, /proc/pid/fd/n will be a link to '/foo (deleted)'
2019-12-03 05:30:10 <kmc> but I guess you may have both files
2019-12-03 05:30:17 <kmc> both '/foo' and '/foo (deleted)'
2019-12-03 05:30:23 <shachaf> But how can you tell whether a program just opened a file with that name?
2019-12-03 05:30:35 <shachaf> Ugh, I hate how much of UNIX is stringly typed.
2019-12-03 05:30:42 <shachaf> The whole /proc thing is a mess.
2019-12-03 05:30:57 <kmc> does  stat /proc/$PID/fd/$N  tell you anything useful?
2019-12-03 05:30:57 <kmc> yes
2019-12-03 05:31:05 <kmc> /proc isn't even UNIX
2019-12-03 05:31:19 <kmc> it's a linux thing intended for quick hacks in kernel development that just grew and grew
2019-12-03 05:31:20 <shachaf> Well, that's fair.
2019-12-03 05:31:25 <shachaf> How did ps work back in the day?
2019-12-03 05:31:32 <kmc> BSD also has /proc but there's not like a standard for what's in these things
2019-12-03 05:31:40 <kmc> i think it even has a linux-emulating procfs as well
2019-12-03 05:31:48 <shachaf> There isn't a POSIX-style standard, but that's not what I care about.
2019-12-03 05:31:50 <kmc> i think by parsing /dev/mem
2019-12-03 05:31:52 <kmc> really.
2019-12-03 05:32:03 <kmc> and so ps was setuid
2019-12-03 05:32:26 <shachaf> The annoying thing is that even if I port my program specifically to Linux, I have this terrible ABI.
2019-12-03 05:32:41 <shachaf> The system call ABI is pretty good. Things like ioctls are OK? And /proc is a mess.
2019-12-03 05:32:46 <zzo38> There are problems with /proc, although I think it is because they treat the files in it as files and symlinks and so on even though it isn't like that. Add a new type for "special entries" and then you can avoid such problem.
2019-12-03 05:32:59 <shachaf> And that's not to mention the userspace ABI, which involves parsing things like /etc/passwd and /etc/resolv.conf which are sort of specified.
2019-12-03 05:33:16 <kmc> ioctls are not okay
2019-12-03 05:33:34 <kmc> ioctls are like syscalls only with minimal oversight on whether they are at all well-designed
2019-12-03 05:34:05 <shachaf> Sure, but at least they have an ABI at all, generally.
2019-12-03 05:34:20 <shachaf> Instead of parsing text which was mostly meant for debugging.
2019-12-03 05:34:44 <shachaf> kmc: Do you like io_uring?
2019-12-03 05:36:15 Joined: tromp
2019-12-03 05:36:15 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 05:36:38 <kmc> what's that
2019-12-03 05:36:46 <shachaf> I don't see anything different from stat.
2019-12-03 05:37:05 <shachaf> Maybe you can open the file and fstat it and compare the inodes or something.
2019-12-03 05:37:20 <shachaf> It's the new Linux asynchronous I/O API.
2019-12-03 05:37:28 <shachaf> and maybe asynchronous everything API??
2019-12-03 05:37:32 <kmc> ok
2019-12-03 05:37:33 <kmc> fun
2019-12-03 05:37:38 <shachaf> https://lwn.net/Articles/776703/
2019-12-03 05:37:59 <shachaf> You have a request and response ring buffer, and you send the kernel requests and get responses.
2019-12-03 05:38:21 <shachaf> If you can send it requests fast enough, you might never have transitions to ring 0 at all.
2019-12-03 05:38:35 <shachaf> You write to your buffer in your thread and it reads in its thread on another core.
2019-12-03 05:40:36 Quit: tromp (Ping timeout: 240 seconds)
2019-12-03 05:40:37 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 05:44:53 <kmc> yeah
2019-12-03 05:45:02 <kmc> but you can also call into the kernel to block on it?
2019-12-03 05:45:19 <kmc> this is how high performance network drivers have worked forever
2019-12-03 05:45:33 <kmc> if you're doing low latency infiniband or something on linux then you don't go through the kernel at all
2019-12-03 05:45:42 <kmc> you write into a ring buffer in the card's address space
2019-12-03 05:46:29 <shachaf> You can also call into the kernel, yep.
2019-12-03 05:46:52 <shachaf> This is the reasonable way for things to work, obviously.
2019-12-03 05:55:14 Joined: Frater_EST
2019-12-03 05:55:14 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, Frater_EST, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 06:08:29 Quit: imode (Ping timeout: 265 seconds)
2019-12-03 06:08:29 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, Frater_EST, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 06:48:17 Quit: Frater_EST (Read error: Connection reset by peer)
2019-12-03 06:48:17 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 06:50:35 Joined: Frater_EST
2019-12-03 06:50:36 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, Frater_EST, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 06:56:20 Quit: Frater_EST (Read error: Connection reset by peer)
2019-12-03 06:56:20 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 06:56:59 Joined: Frater_EST
2019-12-03 06:56:59 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, Frater_EST, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 07:05:20 <esowiki> 14[[07Talk:Initialization14]]4 10 02https://esolangs.org/w/index.php?diff=67608&oldid=67603 5* 03Zzo38 5* (+372) 10
2019-12-03 07:08:10 <esowiki> 14[[07Deadfish14]]4 10 02https://esolangs.org/w/index.php?diff=67609&oldid=67382 5* 03Zzo38 5* (+220) 10It is the old version of TeXnicard; make clear that it is different from the new version.
2019-12-03 07:18:38 Joined: tromp
2019-12-03 07:18:38 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, Frater_EST, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 07:34:42 Quit: Frater_EST (Remote host closed the connection)
2019-12-03 07:34:42 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 07:39:28 <shachaf> why does c++ have copy constructors given that copy constructors are scow
2019-12-03 07:40:25 <shachaf> is there any use of the std::vector copy constructor that isn't a mistake, anyway
2019-12-03 07:40:38 Quit: tromp (Remote host closed the connection)
2019-12-03 07:40:38 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 07:49:57 Quit: Vorpal (Ping timeout: 240 seconds)
2019-12-03 07:49:57 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, wmww, zemhill, zzo38
2019-12-03 07:50:46 Joined: Vorpal
2019-12-03 07:50:46 Quit: Vorpal (Changing host)
2019-12-03 07:50:46 Joined: Vorpal
2019-12-03 07:50:46 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 07:52:14 Joined: tromp
2019-12-03 07:52:14 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 07:53:42 Joined: tromp
2019-12-03 07:54:34 <kmc> shachaf: historical reasons
2019-12-03 07:54:55 <kmc> the language was designed around value types / unboxed objects / whatever you want to call them
2019-12-03 07:55:10 <kmc> but they hadn't worked out that move semantics are the way to make that work nicely
2019-12-03 07:55:42 <kmc> moves + an explicit clone() method seems much nicer to me
2019-12-03 07:55:50 <kmc> though this depends on a certain return-value optimization
2019-12-03 07:55:57 <kmc> but everything in C++ depends on optimization for good performance
2019-12-03 07:56:47 <kmc> there are probably some cases where the copy constructor performs better
2019-12-03 07:56:52 <kmc> at least, i think there are some cases for operator=
2019-12-03 07:57:00 <kmc> which is a closely related concept
2019-12-03 07:57:05 Quit: tromp (Ping timeout: 276 seconds)
2019-12-03 07:57:15 <kmc> but operator= has an old object to (partially) dispose of, and Foo(const Foo&) doesn't
2019-12-03 07:57:39 <kmc> all this is setting aside the question of whether overloadable *move* constructors are also a mistake
2019-12-03 07:57:48 <kmc> which I think is much more debatable
2019-12-03 07:58:05 <shachaf> Man, everything about the STL is scow.
2019-12-03 07:58:12 Quit: tromp (Ping timeout: 268 seconds)
2019-12-03 07:58:12 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 07:58:16 <shachaf> Every time I try to understand what's going on there I'm miserable.
2019-12-03 07:58:46 <kmc> Rust has no operator= overloading, if you assign into a variable whose type has a destructor, then the whole thing is destroyed before the new value is moved in
2019-12-03 07:58:47 <shachaf> And the specification requires things to be low-performance. And the implemetations aren't predictable or fast.
2019-12-03 07:58:52 <kmc> which is plausibly less efficient in some cases, I guess
2019-12-03 07:59:05 <kmc> but I'm not sure how often anyone writes an operator= which does such things
2019-12-03 07:59:33 <shachaf> That sounds pretty plausible. Maybe an even more plausible thing would be to do away with destructors entirely.
2019-12-03 08:00:00 <kmc> then how will I have RAII?
2019-12-03 08:00:05 <kmc> RAII is tg
2019-12-03 08:00:18 <shachaf> is it actually
2019-12-03 08:00:36 <kmc> yes
2019-12-03 08:00:50 <oerjan> `? raii
2019-12-03 08:00:53 <HackEso> RAII means you deallocate in the destructor. There is no 'initializer' involved.
2019-12-03 08:01:08 <kmc> that is a profoundly useless definition
2019-12-03 08:01:25 <shachaf> RAII means you have destructors, I think?
2019-12-03 08:01:25 <oerjan> `dowg raii
2019-12-03 08:01:27 <HackEso> 10903:2017-05-18 <shachaÃàf> slwd raii//s,allocate in the constructor and ,, \ 5854:2015-07-21 <oreÃàn> learn RAII means you allocate in the constructor and deallocate in the destructor. There is no \'initializer\' involved. \ 5853:2015-07-21 <oreÃàn> le/rn RAII/RAII is Resource Allocation in the constructor... wait wait uh... Is uh, Initialization
2019-12-03 08:03:30 <kmc> I think the important *concept* is that resources of all sorts can be modeled by objects in the language, in such a way that having a value of that object type guarantees that the resource is available with a certain set of operations on it
2019-12-03 08:04:27 <kmc> basically the idea that constructors and destructors make sense to manage not just memory but stuff like open files, mutex acquisitions, etc
2019-12-03 08:04:39 <kmc> and this is a good fit for affine types because of course a lot of non-memory resources cannot be copied arbitrarily
2019-12-03 08:04:50 <kmc> as well as a lot of memory-related resources such as uniquely-owned objects
2019-12-03 08:05:20 <shachaf> But constructors aren't the important part, it's destructors. A constructor is just a function that returns a value, but destructors have special language support.
2019-12-03 08:05:25 <kmc> right
2019-12-03 08:05:41 <kmc> in C++ there are some other reasons to have constructors as a language feature
2019-12-03 08:05:45 <kmc> but Rust doesn't need them
2019-12-03 08:06:05 <shachaf> But also is this actually a good idea?
2019-12-03 08:06:12 <shachaf> A mutex is pretty different from memory.
2019-12-03 08:06:27 <shachaf> And RAII isn't even particularly good at managing memory, I think?
2019-12-03 08:06:28 <kmc> *shrug*, it makes for a very convenient and safe API
2019-12-03 08:06:49 <shachaf> In particular RAII helps you write a program with zillions of balanced mallocs and frees.
2019-12-03 08:07:03 <shachaf> But I'm not sure that's a particularly good way to write a program?
2019-12-03 08:07:49 <shachaf> If you do something like arena allocation, then destructors don't even make that much sense. You don't want to loop over the arena and run all the destructors of all the objects.
2019-12-03 08:08:47 <kmc> usually not, no
2019-12-03 08:08:53 <kmc> so don't use arenas with types that have destructors?
2019-12-03 08:08:58 <kmc> but if you do, the right thing will still happen
2019-12-03 08:09:21 <shachaf> Only if you loop over the arena, which presumably isn't even part of the arena API.
2019-12-03 08:09:44 <shachaf> Since arenas are all about freeing a bunch of things all at once.
2019-12-03 08:10:57 <shachaf> How much does RAII give you over something like Python's "with locking_lock_thingy(mutex): ..."?
2019-12-03 08:11:04 Joined: tromp
2019-12-03 08:11:04 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, oerjan, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 08:11:34 <shachaf> It gives you the ability to move a lock_holder_object_type_t to a function, which is a way of telling it that you're holding the lock and it's responsible for freeing it.
2019-12-03 08:11:55 <shachaf> Maybe that's good? But it seems pretty niche at best, and possibly makes for harder to follow control flow.
2019-12-03 08:12:36 Quit: oerjan (Quit: Nite)
2019-12-03 08:12:36 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 08:14:03 <kmc> i think passing off responsibility for a resource through moves seems pretty useful
2019-12-03 08:14:26 <kmc> but i'm kind of tired and not putting a lot of thought into coming up with compelling examples
2019-12-03 08:14:40 <kmc> i have a lot of different things on my mind today :/
2019-12-03 08:16:38 <shachaf> I think you give up on something meaningful by having invisible control flow happen in what seems like an assignment or value passing.
2019-12-03 08:18:54 <shachaf> A "lock_holder_type_t holder{lock};" isn't really much of a value, it's control flow, and it's not clear that treating it as a value makes programs clearer. Maybe?
2019-12-03 08:19:46 <shachaf> Anyway that makes sense too.
2019-12-03 08:21:14 User Name: olsner = olsner!~salparot@c80-217-180-83.bredband.comhem.se
2019-12-03 08:21:14 <olsner> RAII as a concept has always annoyed me, it's weird to reuse something that is otherwise "setting things to their initial value" to mean "acquiring resources"
2019-12-03 08:22:08 <shachaf> RAII isn't really about constructors, and is a bad name.
2019-12-03 08:22:25 <shachaf> "RAII" is also a bad name.
2019-12-03 08:24:14 <olsner> yes, it's more about destructors anyway - a hack where you can use destructors for timing release of "other" resources (except e.g. memory that is more naturally part of an object or its value)
2019-12-03 08:24:15 <b_jonas> oerjan re sees its own messages: it doesn't see its own messages on a channel, but does see them if it explicitly sends to itself by nick
2019-12-03 08:25:06 <kmc> shachaf: the fungus fair is on sunday
2019-12-03 08:26:35 <kmc> fungot: the fungot fair is on sunday
2019-12-03 08:26:35 <fungot> kmc: do you have the parens the important part for me.
2019-12-03 08:27:20 <b_jonas> ooh nice, they extended the cold weather for three more days
2019-12-03 08:27:50 Quit: Sgeo (Read error: Connection reset by peer)
2019-12-03 08:27:50 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 08:28:11 <b_jonas> oerjan: ok, thanks for the feedback
2019-12-03 08:28:33 <b_jonas> oerjan re "even legal" => more like, may get me banned from freenode
2019-12-03 08:29:06 Joined: Sgeo
2019-12-03 08:29:06 Names: ^[, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 08:29:57 <b_jonas> zzo38 re add a ban => doesn't help at all, you can still abuse the bot without it joining anywhere
2019-12-03 08:30:13 <b_jonas> I abused it in private message and made it send to a -n channel
2019-12-03 08:30:46 <shachaf> Wasn't RAII invented for exception handling anyway?
2019-12-03 08:32:16 <b_jonas> kmc /proc/*/fd/* not symlinks => if you open them, you get an actual dup of the same file description, with a shared seek pointer
2019-12-03 08:32:43 <shachaf> What a ridiculous API.
2019-12-03 08:33:16 <shachaf> I like how everything on Linux relies on /proc and /dev and /sys being mounted in particular places but that's only a convention.
2019-12-03 08:33:20 <b_jonas> that it refers to a deleted file is just slightly weird compared to that
2019-12-03 08:33:29 <kmc> b_jonas: ah
2019-12-03 08:33:37 <kmc> i was wondering whether it might do something like that, as well
2019-12-03 08:34:11 <shachaf> It's not even particularly useful in the Plan 9 way where you can run a program with a fake /proc that you proxy calls to, which no one does.
2019-12-03 08:36:12 <b_jonas> zzo38 special entries => even if the type in lstat/fstat doesn't distinguish them, you can call statfs/fstatfs to tell whether a file is on /proc . There's even a command line interface in coreutils now,
2019-12-03 08:36:34 <b_jonas> ``` stat -fc "%T %n" /hackenv /proc
2019-12-03 08:36:35 <HackEso> hostfs /hackenv \ proc /proc
2019-12-03 08:36:52 <shachaf> At least Linux is getting pidfd soon, I think.
2019-12-03 08:37:00 <shachaf> That'll be something.
2019-12-03 08:37:35 <b_jonas> shachaf re parsing text which was mostly meant for debugging => everything ps prints was meant for debugging. normal programs shouldn't invoke ps and find something out automatically to do normal operations.
2019-12-03 08:38:02 <shachaf> b_jonas: I'm talking about parsing text in /proc.
2019-12-03 08:39:32 <b_jonas> shachaf: yes, sometimes I want to make a copy of a whole vector. it typically happens with trivial copy constructors, but can happen even with nontrivial ones.
2019-12-03 08:40:10 <b_jonas> and it's not like copying short vectors is slow.
2019-12-03 08:40:24 <shachaf> b_jonas: Sometimes you want to make a copy of a whole vector, but you could instead do that by calling a function to copy it.
2019-12-03 08:40:33 <shachaf> Having it as an implicit thing when you call a function or whatever is ridiculous.
2019-12-03 08:40:58 <shachaf> It requires a malloc call so it's not like it's fast.
2019-12-03 08:43:14 <b_jonas> shachaf re zillions of balanced mallocs not a particularly good way to write a program => yes, and C++ lets you have objects with trivial constructors, and it can optimize those constructor calls away to a memcpy or nothing everywhere.
2019-12-03 08:44:50 <shachaf> The point is that the argument for RAII is that it helps you balance your mallocs and frees etc., and if that was what you wanted to do anyway, it might be pretty good, but if it's not such a good strategy in the first place, then RAII is less helpful.
2019-12-03 08:46:29 <b_jonas> "At least Linux is getting pidfd soon, I think." => it already has pidfd I believe, but maybe I'm desynced with reality a bit
2019-12-03 08:51:07 <b_jonas> shachaf: what do you want to do implicitly each time you call a function with your vector? do you want a compile time error? that's fine, that's what unique_ptr is for. do you want a pointer plus length without refcounting or any other mechanism to make sure it points to a valid vector? that's bad, it's a thing that's perfectly possible in the core language, but the C++ standard library messed up and
2019-12-03 08:51:13 <b_jonas> only has std::string_view and the horribly overengineered std::span for now.
2019-12-03 08:52:10 <shachaf> An error is OK, sure.
2019-12-03 08:52:25 <shachaf> A copy of the struct seems OK? I guess C++ people wouldn't like that so they can ban it.
2019-12-03 08:52:37 <shachaf> A copy of the data is ridiculous.
2019-12-03 08:52:44 <b_jonas> shachaf: on the other hand, sometimes you don't need top performance, but just want to write a program easily without making stupid mistakes or thinking too much about allocation, in which case the refcounting and automatic frees are useful, and you may still want to write your program in C rather than in a language that can't detect type errors in compile time or in a lazy language like Haskell
2019-12-03 08:52:56 <shachaf> Reference counting is obviously ridiculous.
2019-12-03 08:53:11 <b_jonas> shachaf: there can be different types for each of those
2019-12-03 08:53:37 <b_jonas> no, reference counting is not obviously ridiculous. it's an overkill for MOST things that you do, needed for very few things, that I admit, but it also doesn't hurt too much in many applications
2019-12-03 08:54:06 <shachaf> Instead of reference counting you can just manage the lifetime in some reasonable way.
2019-12-03 08:54:14 <b_jonas> I write a lot of throwaway short programs these days, and given that they take five seconds or even more to run, finding type errors early can help
2019-12-03 08:54:35 <shachaf> For example, allocate at the beginning of the program and never free.
2019-12-03 08:55:08 <b_jonas> allocate at the beginning and never free => that's the easiest thing, you can do that in C++ or basically any language
2019-12-03 08:55:35 <shachaf> Yep.
2019-12-03 08:55:42 <b_jonas> you don't have to use a std::vector for everything
2019-12-03 08:55:57 <shachaf> In fact I don't want to use it for anything.
2019-12-03 08:56:10 <b_jonas> you don't have to use it for anything in your code either
2019-12-03 08:56:12 <shachaf> Every time I look in /usr/include/c++/ I decide that the STL is scow.
2019-12-03 08:56:36 <shachaf> It's all incomprehensible.
2019-12-03 08:57:24 <shachaf> Anyway, you can make types for all these things, but the language and library shouldn't be working against you by implicitly doing the wrong thing.
2019-12-03 08:58:01 <shachaf> If your program runs for five seconds, exit_group is certainly one of the best memory management strategies.
2019-12-03 08:59:49 <zzo38> I have read about pidfd in Linux. I had a similar idea, although mine was a bit different; you can add the constant PIDFD to a file descriptor of the process's directory in /proc and use the resulting number wherever a process ID is expected.
2019-12-03 09:01:38 <b_jonas> zzo38: the point of pidfd is that there's a flag on fork to give you an open file descriptor to the pidfd handler, so there's no file system muckery at all
2019-12-03 09:01:57 Joined: ais523
2019-12-03 09:01:57 Names: ^[, ais523, aji, aloril, APic, atriq, atslash, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 09:01:59 <b_jonas> no messing around in /proc for something that doesn't need it
2019-12-03 09:02:03 <b_jonas> oh hello ais523
2019-12-03 09:02:43 <b_jonas> shachaf: file seconds or longer. at file seconds already I want the type errors early.
2019-12-03 09:03:02 <b_jonas> but yes, there's a point in that
2019-12-03 09:03:16 <b_jonas> I don't need to release memory during those programs
2019-12-03 09:03:45 <shachaf> At least if you fork you don't need to worry about race conditions since you're the parent.
2019-12-03 09:03:47 <b_jonas> though I do want to destroy a few resource-holding objects that hold something other than memory, such as file handles
2019-12-03 09:03:51 <zzo38> b_jonas: Yes, that is good too (although I think it is for clone() and not fork(); fork() has no flags), but I think what I read is that it is the same as the directory in /proc though, so you can use that to get a file descriptor for another process.
2019-12-03 09:04:39 <b_jonas> shachaf: while you're the parent, yes. but how do you tell to some other processes which process that is?
2019-12-03 09:05:04 <b_jonas> those other processes may want to send signals or whatever, even after your process (the parent) exits
2019-12-03 09:05:36 <shachaf> Sure, but you can open /proc/pid and send them the fd.
2019-12-03 09:05:45 <zzo38> Other than the process ID, if you have a file descriptor then could you use a SCM_RIGHTS message to transmit it to other processes?
2019-12-03 09:07:07 <b_jonas> zzo38: yes, or have other children inherit it
2019-12-03 09:07:32 <zzo38> b_jonas: Yes, if you are spawning them yourself
2019-12-03 09:08:32 <zzo38> Anyways, what the difference is in what I read they were doing in Linux and what my own idea was, is that my own way doesn't have a separate system call for sending a signal to or otherwise deal with other processes by the file descriptor instead of process ID; you just add together PIDFD and the file descriptor, to make a number usable where a process ID is expected.
2019-12-03 09:09:10 <b_jonas> definitely SCM_RIGHTS, unless you're golfing for IOCCC, in which case passing file descriptors with sprintf(name, "/proc/%d/self/%d", parentpid, parent_pidfd); pidfd = open(name, 2, 0); is easier.
2019-12-03 09:10:06 <b_jonas> zzo38: oh yeah, you mentioned that. but I find that a somewhat dangerous idea, putting the flag in the process id argument itself rather than into separate flags
2019-12-03 09:10:39 <b_jonas> I don't have a definite example for why that's a bad idea, I just have the feeling that it could cause weird bugs, including possibly security bugs, in some programs
2019-12-03 09:11:37 <zzo38> I thought of that, and that is why the largest valid process ID has to be less than PIDFD-1.
2019-12-03 09:12:17 <zzo38> (Although there might be other things I have not thought of, but as far as I know, I cannot think of them)
2019-12-03 09:12:40 <shachaf> Ugh. Can all y'all just scrap half of Unix and make a good system call API?
2019-12-03 09:14:24 <zzo38> shachaf: I had idea of Plan10 which is sort of like that, although you have to scrap less than half of Unix because some things required for compatibility with Unix; the rest can be implemented in user libraries so need not being system calls (some of them would use new Plan10 system calls which are not Unix system calls, in order to emulate them).
2019-12-03 09:14:41 <shachaf> zzo38: What if I don't want compatibility with Unix?
2019-12-03 09:14:53 <shachaf> Or at best I want it only for an emulation layer like WSL.
2019-12-03 09:15:26 User Name: ais523 = ais523!~ais523@unaffiliated/ais523
2019-12-03 09:15:26 <ais523> shachaf: have you seen WASI? you probably need more system calls than that for a full OS, but it seems to have the general right attitude
2019-12-03 09:15:55 <shachaf> ais523: Well, I want it to be the actual OS interface, for actual native code, and without a web browser or some ridiculous thing running in between.
2019-12-03 09:16:05 <zzo38> Some things would only be compatible if things are set up to do such thing anyways; if your program exports a function called "plan10main" then those things are not automatically set up.
2019-12-03 09:16:11 <shachaf> The goal is simplifying things, not adding layer and layers of wrappers.
2019-12-03 09:16:16 <shachaf> But maybe the API itself is good?
2019-12-03 09:16:51 <zzo38> (If your program doesn't include "plan10main", then the one in the library is used, which sets up Unix compatibility and then calls main.)
2019-12-03 09:17:24 <zzo38> Use a library without Unix compatibility if you do not want it though, I suppose, is also possible.
2019-12-03 09:17:28 <shachaf> It seems likely that all syscalls should go through something like io_uring, since how often do you want to do a ring transition for each one separately?
2019-12-03 09:19:51 <shachaf> The actual WASI API might be reasonable? What's better about it than Linux?
2019-12-03 09:20:49 <zzo38> I don't know what is io_uring
2019-12-03 09:21:12 <shachaf> zzo38: https://kernel.dk/io_uring.pdf
2019-12-03 09:21:28 <b_jonas> and I want compatibility with a lot of existing programs that I use and I don't want to rewrite, so I use Linux. (and Windows at work.)
2019-12-03 09:21:33 <shachaf> That article maybe isn't the best introduction.
2019-12-03 09:22:43 <b_jonas> but sure, experiment with research OSes if you want, someone has to do it so that 30 years from now, we have an infrastructure that's only 30 years obsolete, not 50 years obsolete
2019-12-03 09:23:13 <zzo38> b_jonas: It is why my idea of Plan10 has the compatibility mode (much of it is implemented in user libraries, but some stuff would be part of the kernel).
2019-12-03 09:24:40 <b_jonas> zzo38: will you want a new main OS interface every 15 years, and will you have three different compatibility layers 30 years from now when you add the fourth one?
2019-12-03 09:24:58 <b_jonas> with existing large programs using all of them mixed and matched through libraries obviously
2019-12-03 09:25:13 <b_jonas> back in an hour
2019-12-03 09:25:14 Quit: b_jonas (Quit: leaving)
2019-12-03 09:25:14 Names: ^[, ais523, aji, aloril, APic, atriq, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 09:25:17 <shachaf> b_jonas: Permit programs to use only one of the interfaces.
2019-12-03 09:25:33 <shachaf> Just like Windows supported either Win32 or POSIX, but not both at once.
2019-12-03 09:27:55 <zzo38> b_jonas: If the author of a program wishes to use multiple libraries that is up to the author of those programs. I should think the kernel itself would not have three different compatibility layers and new main OS interfaces, if it is designed properly.
2019-12-03 09:31:12 <ais523> shachaf: I don't think WASI has a mandatory dependency on WebAssembly, although obviously it was designed for that use
2019-12-03 09:31:35 <ais523> also, WebAssembly doesn't require a browser, it's just a bytecode language that can have small non-browser-dependent interpreters written for it (and a few of those exist already)
2019-12-03 09:33:06 <zzo38> (Of course, Unix programs which export a symbol called "plan10main" will not work when compiled for Plan10, but that is unavoidable. If you install an emulator then you might even be able to run the programs directly though (rather than recompiling them for Plan10), which would work; however, the emulators are not part of the core system, but just a feature of the core system to allow the possibility to install emulators.)
2019-12-03 09:33:38 <ais523> zzo38: why not use a character in the symbol name that isn't valid in a UNIX program?
2019-12-03 09:33:40 <zzo38> ais523: I know of that, and I wanted to see if there is a library to execute WebAssembly programs from a native C program.
2019-12-03 09:34:05 <ais523> zzo38: I'm not sure whether any of the existing interpreters work as a library, even if none do it should be easy to adapt them though
2019-12-03 09:34:42 <zzo38> ais523: Because the C compiler will not accept it. Anyways, it is the C library which causes the program to call main() when it starts anyways, I think?
2019-12-03 09:35:01 <zzo38> (So the kernel doesn't need to care what it is called.)
2019-12-03 09:35:32 <ais523> won't the C compiler need to be modified anyway to produce programs for a new OS?
2019-12-03 09:36:06 <ais523> but yes, in most implementations, main is called by an object file in the standard library, normally called something like crt0.o
2019-12-03 09:36:14 <ais523> IIRC it isn't in libc itself, but a separate standard library
2019-12-03 09:36:52 <zzo38> Probably, but you will not need to modify the files which change how the program is parsed, I should think.
2019-12-03 09:39:13 <ais523> out of interest, why do you want a different main method? so you can give it different parameters?
2019-12-03 09:39:26 Quit: kingoffrance (Quit: x)
2019-12-03 09:39:26 Names: ^[, ais523, aji, aloril, APic, atriq, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 09:39:37 <ais523> ‚Ä¶now I'm wondering whether C++ object files mangle the name of "main" or not
2019-12-03 09:40:15 <zzo38> That is one of it, yes (there are a few additional parameters), but also for compatibility with UNIX.
2019-12-03 09:41:08 <ais523> well, most C implementations let you give a function too many parameters without issue
2019-12-03 09:41:26 <ais523> that's one of the reasons why caller-cleans is a more common calling convention than callee-cleans
2019-12-03 09:41:33 <ais523> (IMO callee-cleans is much better for a number of reasons)
2019-12-03 09:41:57 Quit: Hooloovo0 (Ping timeout: 240 seconds)
2019-12-03 09:41:57 Names: ^[, ais523, aji, aloril, APic, atriq, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 09:42:27 <ais523> so why not use the same entry point for plan10 programs and posix programs?
2019-12-03 09:42:54 <zzo38> Because the default settings for Plan10 are not compatible with POSIX.
2019-12-03 09:43:54 <zzo38> (The default implementation of plan10main sets up some stuff required for POSIX compatibility and then calls main.)
2019-12-03 09:43:59 <ais523> what sort of settings are these? things like locale?
2019-12-03 09:45:18 <zzo38> No; stuff such as that in POSIX, you will receive a SIGPIPE signal which will terminate the process for writing to any broken pipe, and so on
2019-12-03 09:45:46 Joined: Hooloovo0
2019-12-03 09:45:46 Names: ^[, ais523, aji, aloril, APic, atriq, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 09:46:51 <zzo38> (Sometimes that behaviour with SIGPIPE is wanted, but often only for file descriptor 1. So if you are not using the POSIX compatibility then your program can enable SIGPIPE for file descriptor 1 only, in that case.)
2019-12-03 09:47:35 <ais523> oh, I see, for file descriptors inherited from the parent process there's no easy chance to configure that
2019-12-03 09:47:49 <ais523> (for file descriptors opened by the program itself, it would make sense for the API that opens it to specify how you wanted signals to be configured)
2019-12-03 09:47:57 <shachaf> Are file descriptors a good system?
2019-12-03 09:48:00 <ais523> I can see an argument for file descriptors 1 and 2
2019-12-03 09:48:30 <shachaf> It's kind of nice how you can have something like a perf_event_open fd, and either read() or mmap() it, just like anything else.
2019-12-03 09:48:36 <ais523> shachaf: you need /something/ to be able to refer to an open file, and having an "open/closed" status in files rather than being stateless seems to be the right option because it makes it much easier to reason about potential race conditions
2019-12-03 09:48:38 <shachaf> Rather than a bunch of special-case system calls.
2019-12-03 09:48:40 <zzo38> ais523: Yes, that makes sense. The POSIX compatibility API (which is a user library function) would call the system call and tell it to enable SIGPIPE.
2019-12-03 09:48:50 <shachaf> But sometimes people try too hard to fit things into that API.
2019-12-03 09:48:51 <ais523> WASI came up with an improvement, though, where file descriptors are random numbers rather than being sequential
2019-12-03 09:54:19 Nick Change: atriq -> Taneb
2019-12-03 09:54:20 Names: ^[, ais523, aji, aloril, APic, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wmww, zemhill, zzo38
2019-12-03 09:55:18 <zzo38> (possibly some setting in the C library which the default plan10main would set up, or that somehow checks whether or not plan10main has been overridden if that is possible)
2019-12-03 09:59:10 <shachaf> Sequential file descriptors are clearly scow.
2019-12-03 09:59:37 <shachaf> Windows has HANDLEs, which I guess are pretty similar.
2019-12-03 09:59:43 <shachaf> (To random descriptors.)
2019-12-03 10:00:37 <shachaf> I guess they're not the same for various reasons.
2019-12-03 10:03:31 <olsner> I consider HANDLEs and file descriptors both just handles for kernel objects
2019-12-03 10:03:50 <olsner> (windows has some unrelated things that are typed HANDLE but aren't actually kernel objects though)
2019-12-03 10:05:48 <olsner> e.g. GDI handles are in a different namespace, and some are just pointers for things that pretend to be or once were kernel features but are implemented in user space
2019-12-03 10:06:59 <shachaf> It probably makes sense to be able to have "system calls" implemented in userspace, as Windows does.
2019-12-03 10:07:14 <shachaf> (Though maybe that's not really compatible with the ring buffer thing I was talking about before?)
2019-12-03 10:07:29 <olsner> it's a good way to give you freedom on the kernel side to change your system calls
2019-12-03 10:07:42 <zzo38> If the ABI and ISA fields in the ELF header are incorrect, then the kernel should see if an emulator for the specified ABI/ISA is loaded (the emulator is just a kernel module, and the core system does not include any emulators), and if there isn't one then trying to execute that file is an error.
2019-12-03 10:08:35 <shachaf> I'm a little skeptical that things like POSIX are particularly good.
2019-12-03 10:09:13 <shachaf> I'd rather have minimal and stable OS ABIs and then maybe a library on top that things can link to if they want to be portable.
2019-12-03 10:10:09 <zzo38> I do think there are some problems with POSIX, and also some problems with Windows, and also other systems.
2019-12-03 10:11:45 <zzo38> Wikipedia says that the ABI field in the ELF header "is often set to 0 regardless of the target platform". Unless the program is for System V, such files will have to be corrected in order to run on Plan10.
2019-12-03 10:12:15 <shachaf> zzo38: Is Plan10 some sort of banana pun?
2019-12-03 10:12:32 <zzo38> (This correction can be made without recompiling the program; you only have to change one byte in the executable file.)
2019-12-03 10:12:50 <zzo38> shachaf: That is not the intention; the name is similar to Plan9 but is different.
2019-12-03 10:24:49 Joined: wib_jonas
2019-12-03 10:24:49 Names: ^[, ais523, aji, aloril, APic, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wib_jonas, wmww, zemhill, zzo38
2019-12-03 10:26:18 User Name: wib_jonas = wib_jonas!25bf3cd1@gateway/web/cgi-irc/kiwiirc.com/ip.37.191.60.209
2019-12-03 10:26:18 <wib_jonas> shachaf: programs only use one interfaces => then all large programs will stick to the older interface because that's what the libraries use. just like everyone still uses gtk+ version 2 rather than the incompatible version 3, but in a larger scale.
2019-12-03 10:26:36 <wib_jonas> I'd prefer to keep most of the unix api, because most of it is sane, and just improve the few parts that are bad.
2019-12-03 10:26:47 <wib_jonas> but I admit I was a bit too sarcastic about compatibility
2019-12-03 10:27:27 <wib_jonas> and you can mix windows API with POSIX all the time on windows, although it's ugly because the POSIX API really doesn't match how windows works, and you need some conversion functions, but I still do it sometimes
2019-12-03 10:28:20 <shachaf> wib_jonas: You can port programs to new interfaces just like you can port them to new OSes.
2019-12-03 10:29:13 <shachaf> If programs are just using the OS ABI via libraries, it's even easier to port, because you can just port the libraries (like libc and SDL).
2019-12-03 10:29:26 <wib_jonas> ais523: main isn't mangled, but the C++ compiler treats in somewhat special way at compile time, and then the linker treats it specially at link time
2019-12-03 10:31:20 <wib_jonas> in particular, on most platforms the compiler emits main as an extern "C" function, even if you didn't explicitly define it as such, and it has an implicit return 0, and IIRC there was one or two more things special about it, plus the linker inserts constructors and destructors to it somehow
2019-12-03 10:31:52 <wib_jonas> or so I believe, but I'm not quite sure about this
2019-12-03 10:34:06 <wib_jonas> shachaf: no, windows HANDLEs are mostly sequential numbers too. they're not guaranteed to be sequential, unlike on unix, but they mostly are.
2019-12-03 10:34:35 <wib_jonas> or so I believe, but again, I'm not sure in this
2019-12-03 10:35:04 <shachaf> Aren't HANDLEs generally opaque?
2019-12-03 10:36:04 <wib_jonas> shachaf: opaque, yes. opaque numbers that are typically sequential, but the OS gets to decide that, and may give you any numbers it if it feels like.
2019-12-03 10:36:13 <shachaf> I thought they were sometimes pointers or other things.
2019-12-03 10:41:30 <ais523> wib_jonas: IIRC in C++ main isn't allowed to be recursive (although in C it is)
2019-12-03 10:41:52 <ais523> this is a weird limitation because it should be easy just to imply a wrapper around it in the compiler if the compiler couldn't handle a recursive main
2019-12-03 10:47:17 Quit: ski (Ping timeout: 240 seconds)
2019-12-03 10:47:17 Names: ^[, ais523, aji, aloril, APic, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wib_jonas, wmww, zemhill, zzo38
2019-12-03 10:56:09 Joined: wib_jonas96
2019-12-03 10:56:09 Names: ^[, ais523, aji, aloril, APic, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wib_jonas, wib_jonas96, wmww, zemhill, zzo38
2019-12-03 10:56:41 Joined: ski
2019-12-03 10:56:41 Names: ^[, ais523, aji, aloril, APic, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wib_jonas, wib_jonas96, wmww, zemhill, zzo38
2019-12-03 10:58:37 Quit: wib_jonas (Ping timeout: 240 seconds)
2019-12-03 10:58:37 Names: ^[, ais523, aji, aloril, APic, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wib_jonas96, wmww, zemhill, zzo38
2019-12-03 11:00:56 Nick Change: wib_jonas96 -> wib_jonas
2019-12-03 11:00:56 Names: ^[, ais523, aji, aloril, APic, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wib_jonas, wmww, zemhill, zzo38
2019-12-03 11:18:20 Joined: arseniiv
2019-12-03 11:18:21 Names: ^[, ais523, aji, aloril, APic, arseniiv, atslash, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, dingwat, divergence, djhoulihan, dnm, dog_star, erdic, esowiki, FireFly, fizzie, fungot, GeekDude, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, iczero, imode-ruby, int-e, interruptinuse, iovoid, j-bot, j4cbo, jix, joast, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, MDude, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shachaf, shig, shikhin, shinh, ski, sleepnap, Soni, sparr, sprocklem, stux|away, subleq, Taneb, trn, tromp, tswett[m], vertrex-, Vorpal, wib_jonas, wmww, zemhill, zzo38
2019-12-03 11:32:33 <shachaf> `? dc
2019-12-03 11:32:35 <HackEso> dc is short for "dump core". (try it out yourself: dc -e '[')
2019-12-03 11:32:40 <shachaf> `` dc -e '['
2019-12-03 11:32:41 <HackEso> No output.
2019-12-03 11:33:07 <shachaf> I want a program to SEGV, any options?
2019-12-03 11:35:38 User Name: wib_jonas = wib_jonas!25bf3cd1@gateway/web/cgi-irc/kiwiirc.com/ip.37.191.60.209
2019-12-03 11:35:38 <wib_jonas> `perl -ekill 11,$$
2019-12-03 11:35:39 <HackEso> No output.
2019-12-03 11:35:53 <wib_jonas> ``` perl '-ekill 11,$$'; echo $?
2019-12-03 11:35:54 <HackEso> bash: line 1:    54 Segmentation fault      perl '-ekill 11,$$' \ 139
2019-12-03 11:36:07 <wib_jonas> ``` perl '-eunpack"p",0'; echo $?
2019-12-03 11:36:10 <HackEso> 0
2019-12-03 11:37:31 <shachaf> That's a fake SEGV.
2019-12-03 11:39:56 <ais523> `! c return *(int *)0;
2019-12-03 11:39:59 <HackEso> ‚Äã/hackenv/interps/gcccomp/gcccomp: line 53:    68 Segmentation fault      /tmp/compiled.$$
2019-12-03 11:40:12 <ais523> can't get much more real SEGV than that
2019-12-03 11:40:49 <ais523> also, that "$$" is interesting, looks like there was an attempt to swap in the PID, but it still works anyway due to the nature of /tmp
2019-12-03 11:41:31 <shachaf> I wanted to test the program "catchsegv" that I just found out about.
2019-12-03 11:41:49 <shachaf> But now I know how it works so I'm less curious.
2019-12-03 11:43:13 <shachaf> (It uses LD_PRELOAD to set up a signal handler.)
2019-12-03 11:43:55 <wib_jonas> oh, that reminds me
2019-12-03 11:44:04 <wib_jonas> ``` rm -v /hackenv/bin/culprits-ng
2019-12-03 11:44:12 <HackEso> removed '/hackenv/bin/culprits-ng'
2019-12-03 11:44:19 <wib_jonas> I created that long ago, but I don't use it
2019-12-03 11:44:27 <shachaf> `before
2019-12-03 11:44:29 <HackEso> ‚Äã/hackenv/bin/culprits-ng//#!/bin/sh \ exec hg log -l 512 --template "{desc}\0" -- "$@" | perl -0ne '/^<([^>]*)>/ and print"$1 "'
2019-12-03 11:46:39 <wib_jonas> I almost never want to look up just the users who modified a file, without other parts of the revision log
2019-12-03 11:50:50 <fizzie> `culprits ../bin/culprits-ng
2019-12-03 11:50:52 <HackEso> wib_jonaÃàs oerjaÃàn oerjaÃàn b_jonaÃàs b_jonaÃàs b_jonaÃàs b_jonaÃàs b_jonaÃàs
2019-12-03 11:53:16 <fizzie> Not 100% sure how culprits-ng differed from the regular one, other than the limit, no scowrevs, and no no-ping.
2019-12-03 11:55:46 <FireFly> ...scowrevs?
2019-12-03 11:56:01 <shachaf> `` hg log -l 512 --template "{desc}\0" -- ../bin/culprits-ng | perl -0ne '/^<([^>]*)>/ and print"$1 "'
2019-12-03 11:56:07 <HackEso> fizzie b_jonas b_jonas b_jonas b_jonas
2019-12-03 11:56:23 <shachaf> `` hg log --removed -l 512 --template "{desc}\0" -- ../bin/culprits-ng | perl -0ne '/^<([^>]*)>/ and print"$1 "'
2019-12-03 11:56:24 <FireFly> `` cat $(which culprits)
2019-12-03 11:56:25 <HackEso> wib_jonas oerjan oerjan fizzie jeffl35 fizzie evilipse b_jonas b_jonas b_jonas b_jonas b_jonas
2019-12-03 11:56:25 <HackEso> hoag "$@" | awk '{print substr($1,2,length($1)-2)}' | xargs -d'\n'
2019-12-03 11:56:50 <wib_jonas> fizzie: no noping, no scowrevs, and different implementation.
2019-12-03 11:57:12 <wib_jonas> saner implementation, I hope
2019-12-03 11:58:01 <shachaf> What does it have to do with sanity?
2019-12-03 11:58:11 <shachaf> It looks like a golfed Perl implementation.
2019-12-03 11:58:36 <wib_jonas> FireFly: scowrevs is a list of revisions in our repository that most of the fancy commands hide by default, though you still see them with an explicit hg
2019-12-03 11:58:48 <wib_jonas> and I mean they hide their diffs, so you don't see the same change in the next revision either
2019-12-03 11:59:27 <wib_jonas> ``` cat /hackenv/bin/hlnp
2019-12-03 11:59:28 <HackEso> scowrevs="$(/usr/bin/paste -sd'|' /hackenv/share/scowrevs)"; hg log -r "tip:0 & ! ($scowrevs)" "$@" | sed 's/\(\(^\| \)[<Itb][^ ]*\)\([^ ][^ ]\)/\1Ãà\3/'
2019-12-03 11:59:36 <wib_jonas> `cat /hackenv/share/scowrevs
2019-12-03 11:59:37 <HackEso> 121:122 \ 194:196 \ 770:771 \ 1000:1001 \ 1493:1497 \ 2112:2114 \ 3342:3343 \ 4530:4531 \ 5136:5137 \ 5642:5643 \ 5894:5897 \ 8669:8678 \ 9070:9071 \ 9074:9075
