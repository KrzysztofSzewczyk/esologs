2020-01-06 00:00:09 <b_jonas> it's a "new" thing, in the sense that it became used during the time I've been using linux
2020-01-06 00:01:17 <b_jonas> earlier we only had ordinary file systems backed on ramdisks, which are like flat virtual devices that are stored in the (virtual) memory, swappable, but then the kernel has to do most of the work that it would have to do to represent the file system on a (very fast) flat block device
2020-01-06 00:01:18 <zzo38> Specifically the data I want the external program to read is a blob in a SQLite database; maybe I should have mentioned that at first.
2020-01-06 00:01:29 <b_jonas> so tmpfs is more efficient
2020-01-06 00:01:49 <b_jonas> DOS also supports ramdisk
2020-01-06 00:02:38 <b_jonas> zzo38: but what does the program that you spawn do with its input and output?
2020-01-06 00:03:01 <zzo38> Converts it into a different format.
2020-01-06 00:03:33 <b_jonas> are the input and output very large? do you need interactivity, that is, do you want to get part of the output while you're still streaming the input?
2020-01-06 00:03:42 <b_jonas> and what do you do with the output?
2020-01-06 00:03:51 <zzo38> (And actually it isn't the entire blob; a few bytes at the beginning will be skipped, and this number may vary.)
2020-01-06 00:04:51 <zzo38> The input and output are potentially large, because it is a picture of the art in a card (e.g. the art box in a Magic: the Gathering card).
2020-01-06 00:04:55 <b_jonas> also is the sql database in a file that is slow to read, and do you want to be able to stop reading early in case of an error?
2020-01-06 00:05:16 <b_jonas> zzo38: just small vs large doesn't matter (unless it's so small that you just pass it in the argv), I'm asking if it can be very large
2020-01-06 00:05:36 <b_jonas> so it's not too large
2020-01-06 00:05:37 <zzo38> It might be very large if you are printing at a high resolution.
2020-01-06 00:06:19 <zzo38> The SQL database is already open by the main program (TeXnicard; maybe telling it is TeXnicard is also useful to you I don't know)
2020-01-06 00:07:17 <b_jonas> I'd probably just write the input data to a temporary regular file on a fast file system. if you can conveniently pass file descriptors to the program that you spawn, then unlink the file and pass just a file descriptor, that way if something goes wrong it's less likely that you have the temp file file remain on the disk.
2020-01-06 00:08:16 <b_jonas> you usually don't even need an actual tmpfs, if you don't have security requirements, because if everything fits in memory and you delete the file soon then the file won't leave the cache, and if it doesn't fit in memory then writing it out to the disk is a feature,
2020-01-06 00:08:48 <b_jonas> but if you have a fast swap device and no readily accessible file system on the fast device and no file system cache on the fast device, then you may want a tmpfs anyway
2020-01-06 00:08:55 <b_jonas> but that's not a common configuration these days
2020-01-06 00:09:56 <b_jonas> linux can now even handle the case when you store the file system on a slower rotating disk but cache it on a large SSD, because this is getting a commonly useful case
2020-01-06 00:10:10 <b_jonas> you have to configure it well, and I don't know the details, but I hear it's working well
2020-01-06 00:10:19 <zzo38> I didn't know it has that, but I thought of that too.
2020-01-06 00:10:52 <b_jonas> that need not be true if you're using old operating system software though, but then you likely won't have a fast SSD
2020-01-06 00:11:24 Quit: LKoen (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
2020-01-06 00:11:24 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, FreeFull, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 00:11:36 <b_jonas> I don't really know what happens on Windows, I deliberately avoid all system administration responsibilities for Windows and don't want to learn more than I really need for my job
2020-01-06 00:11:57 <b_jonas> i.e. I don't work in system administration, but I need to administer my work desktop a bit to just use it for work
2020-01-06 00:12:31 <zzo38> I could write the data from the database to an external file and then pass that to the external program and then read back the output into memory, I suppose, since the output is likely to be larger than the input, but then that requires making a copy of the data
2020-01-06 00:12:53 <b_jonas> what will you do with the output?
2020-01-06 00:12:59 <b_jonas> will you send it to a printer?
2020-01-06 00:13:19 <b_jonas> or show it on the screen?
2020-01-06 00:15:14 <zzo38> It will be combined with an in-memory picture
2020-01-06 00:15:24 <b_jonas> I think this case hasn't come up for me, because I always just had the compressed image or video data stored in a disk file, and the raw data in memory going through a pipe
2020-01-06 00:16:37 <b_jonas> in one case the uncompressed data was also in a disk file, but in a format that I had to decode in my program (not sqlite specifically), but even then the other side, the compressed data went to disk files
2020-01-06 00:20:18 <zzo38> In my case the compressed data is in a SQLite database rather than a file by itself, and there should not be any need to store the uncompressed data in any file. The blob starts with a flag byte and then the MIME type (omitting "image/" if it belongs to that category, otherwise the full MIME type) and then the data in the format specified by the MIME type, and the configuration file specifies how to decode it.
2020-01-06 00:21:08 <b_jonas> and I presume the same database contains other metadata over just the images
2020-01-06 00:21:19 <b_jonas> which is why you don't just store the compressed image in a separate file
2020-01-06 00:23:24 <zzo38> Yes, that is true.
2020-01-06 00:23:56 <zzo38> And that is why it isn't stored in a separate file.
2020-01-06 00:30:14 <b_jonas> zzo38: if you want to eg. send the uncompressed data to the printer, you can consider trying to not send that data through your process, so that your process only send ths compressed image to the forked process, and then the convereted output from that process is sent to whatever program does the printing
2020-01-06 00:31:56 <b_jonas> then you don't need any non-blocking things
2020-01-06 00:32:10 <b_jonas> but it's also not too hard to handle the two pipes in a select loop if you really need to
2020-01-06 00:32:33 <zzo38> That picture is not the entire card, though, but only a part of it. And there is no guarantee that there will not be other stuff overlapping, or other things done to it before the page is completed.
2020-01-06 00:33:21 <zzo38> (This program is meant to render cards for card games such as Magic: the Gathering; like MSE but different.)
2020-01-06 00:33:47 <b_jonas> zzo38: and you want to process that uncompressed data together with some other data you read from the database, which is why you want it in the same process?
2020-01-06 00:33:56 <zzo38> Yes.
2020-01-06 00:34:43 <b_jonas> well, then either write something to a temporary file (that you unlink when you no longer need), or use a select loop to read and write the pipe in an unknown order
2020-01-06 00:35:05 <b_jonas> if you need both sides from the same process then that's mostly what you can do
2020-01-06 00:35:42 <b_jonas> though for some converters, you may be sure that it won't start writing even a header before it completely reads its input, in which case you can just write the input to the pipe and then read the output, without select or nonblocking
2020-01-06 00:35:59 <b_jonas> that can depend on the converter and its options
2020-01-06 00:36:05 <zzo38> Yes, OK. Probably I will just copy the data from the database to a temporary file when doing it, I suppose; that seems to be easily enough.
2020-01-06 00:36:25 <zzo38> Yes, about what you said about the converter is true, but such thing is not known by this program
2020-01-06 00:37:18 <b_jonas> of course another possibility is to also put the converter in the same process
2020-01-06 00:37:30 <b_jonas> which I could do with ImageMagick in particualr
2020-01-06 00:37:51 <b_jonas> because it has some dynamic libraries and documented interfaces
2020-01-06 00:37:57 <b_jonas> C and C++ interfaces
2020-01-06 00:38:30 <b_jonas> I think those allow reading compressed image streams from in memory, though I haven't actually tried that
2020-01-06 00:38:46 <zzo38> Yes, although I am not even knowing if it is a format supported by ImageMagick or not, for one thing.
2020-01-06 00:39:08 <b_jonas> even for embedding, I read/wrote the compressed image from/to disk files, I just manipulated the uncompressed image data in memory of the same process
2020-01-06 00:39:39 <zzo38> (I can easily change how it communicates with the external program later if needed, I suppose.)
2020-01-06 00:40:41 <b_jonas> sure, but you can do this with some libraries other than ImageMagick too
2020-01-06 00:41:23 <b_jonas> there are good reasons for that, beacuse ImageMagick doesn't natively support everything
2020-01-06 00:42:57 <zzo38> The way I have though, the user can install only the ones they need, rather than needing to add all of the dependencies that you don't use
2020-01-06 00:42:59 <b_jonas> though you can also do conversion to a more convenient image format when you're importing to the database, and later read that convenient (but still compressed) input format with ImageMagick
2020-01-06 00:44:19 <b_jonas> this can happen if you scan or photograph the card, but then preprocess the image and store the cleaned up image in the database as a jpeg
2020-01-06 00:46:32 <b_jonas> that's when you can also rotate and crop and color correct the scan/photo, not just convert formats
2020-01-06 00:46:40 <zzo38> Yes, I suppose that can also work, although then I wouldn't need to support more than one format inside the process (since conversion from any other format can be done before importing into the database), but JPEG is probably not a good choice in this case because JPEG is lossy.
2020-01-06 00:47:29 <zzo38> (Also, the picture is not necessarily RGB and it might be CMYK instead.)
2020-01-06 00:47:35 <b_jonas> you can still have more than one formats, since ImageMagick handles multiple formats with a natively built in decoder
2020-01-06 00:48:00 <b_jonas> ImageMagick abstracts away some of those format differences
2020-01-06 00:49:27 <zzo38> Probably only the artwork of the card would be stored in the database; the border pictures would be in external files.
2020-01-06 00:49:33 <b_jonas> sure
2020-01-06 00:49:48 <b_jonas> that doesn't change much of what I said
2020-01-06 00:50:05 <b_jonas> mind you, these days there are too many cards with art extending outside the borders that you might not want to do that
2020-01-06 00:50:19 <b_jonas> for the inner and middle borders that is
2020-01-06 00:50:37 <b_jonas> you can do it with the outer black (or white) border, except for Un-sets
2020-01-06 00:51:38 <b_jonas> but if you're assembling your own cards from art that you have, then you might store different elements of the card separately
2020-01-06 00:51:38 <zzo38> Whether or not the art extends outside of the border wouldn't be built into the program anyways, since that stuff can be controlled by templates.
2020-01-06 00:52:03 <zzo38> Have you used Magic Set Editor?
2020-01-06 00:52:22 <b_jonas> one image for the art box, one image for the inner and middle border and text box, one for the text box watermark, and some for mana symbols
2020-01-06 00:52:26 <b_jonas> no, I haven't used it
2020-01-06 00:53:12 <b_jonas> I haven't created physical custom Magic cards, except simple proxies by putting a handwritten slip of paper next to the card inside the sleeve
2020-01-06 00:54:40 <zzo38> Different elements of the card would be stored separately, some stuff (specific to these individual cards and the set) in the database, and other stuff (applicable to any cards) in the template.
2020-01-06 00:57:36 <zzo38> If you are interested in TeXnicard then you should probably join the newsgroups of it. Also, for mana symbols I would probably want to use fonts instead (MSE uses pictures for the mana symbols, but I think to use fonts for the mana symbols will be better).
2020-01-06 00:58:23 <b_jonas> sure, if you have a font that contains all forty-something mana symbols, then that can work
2020-01-06 00:58:43 <b_jonas> plus the tap and untap symbol
2020-01-06 00:59:01 Quit: FreeFull
2020-01-06 00:59:02 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 01:02:10 <zzo38> Yes.
2020-01-06 01:02:58 Quit: heroux (Read error: Connection reset by peer)
2020-01-06 01:02:58 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 01:03:26 Joined: heroux
2020-01-06 01:03:26 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 01:07:40 Joined: budonyc
2020-01-06 01:07:40 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 01:12:27 <zzo38> Do you think some special effects other than opacity might be needed?
2020-01-06 01:32:02 <Lykaina> hi
2020-01-06 01:32:16 <zzo38> Hello
2020-01-06 01:32:27 <Lykaina> do we discuss magic the gathering in here?
2020-01-06 01:33:36 <Lykaina> my usual irc channel for it is inactive atm
2020-01-06 01:36:04 <zzo38> This channel isn't mainly for Magic: the Gathering, but sometimes we will discuss anything including Magic: the Gathering if there isn't the esoteric programming to discuss at the time, I suppose.
2020-01-06 01:36:22 <zzo38> Do you like to make up custom Magic: the Gathering cards?
2020-01-06 01:36:26 <zzo38> Or puzzles?
2020-01-06 01:37:12 <Lykaina> https://tappedout.net/mtg-decks/nylea-based-mono-g/
2020-01-06 01:37:24 <Lykaina> look good?
2020-01-06 01:37:41 <Lykaina> that was the question i asked
2020-01-06 01:39:00 <zzo38> I don't know much about looking if a deck is good or not.
2020-01-06 01:41:02 <Lykaina> oh shit...i have more than 1 of a card and the format is edh
2020-01-06 01:43:20 <zzo38> Oops, yes you are correct, you have 2x Ripjaw Raptor
2020-01-06 01:43:31 <zzo38> That won't do, so you will have to change it
2020-01-06 01:47:05 <zzo38> I also invented a file format for deck lists
2020-01-06 01:51:41 <Lykaina> cool
2020-01-06 01:51:50 <Lykaina> anyone use it?
2020-01-06 01:52:29 <zzo38> I don't know.
2020-01-06 01:54:27 Quit: heroux (Read error: Connection reset by peer)
2020-01-06 01:54:27 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 01:55:04 <zzo38> Here is a file using that format:  http://zzo38computer.org/textfile/miscellaneous/magic_card/decks/making_enemies.deck
2020-01-06 01:55:31 <zzo38> For the commander, use a [COMMAND] block.
2020-01-06 01:55:45 <zzo38> (The <DECK1> and <DECK2> are not needed if it is a single deck.)
2020-01-06 01:56:08 <esowiki> 14[[07Brainfuck Contest 114]]4 10 02https://esolangs.org/w/index.php?diff=68695&oldid=68694 5* 03Mikadio 5* (-28) 10/* Code that actually works as required */
2020-01-06 01:59:32 Joined: heroux
2020-01-06 01:59:32 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 02:03:19 Quit: heroux (Read error: Connection reset by peer)
2020-01-06 02:03:19 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 02:04:32 Joined: heroux
2020-01-06 02:04:33 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 02:07:57 Quit: tromp (Ping timeout: 260 seconds)
2020-01-06 02:07:57 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 02:08:39 Joined: tromp
2020-01-06 02:08:40 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 02:10:54 <esowiki> 14[[07Brainfuck Contest 114]]4 10 02https://esolangs.org/w/index.php?diff=68696&oldid=68695 5* 03Mikadio 5* (-3) 10/* Code that actually works as required */
2020-01-06 03:03:26 Joined: Lord_of_Life
2020-01-06 03:05:43 Quit: Lord_of_Life (Ping timeout: 265 seconds)
2020-01-06 03:06:18 Nick Change: Lord_of_Life -> Lord_of_Life
2020-01-06 03:07:10 Quit: heroux (Read error: Connection reset by peer)
2020-01-06 03:07:10 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 03:07:19 Joined: heroux
2020-01-06 03:07:19 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, budonyc, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 03:20:02 Quit: budonyc (Quit: Leaving)
2020-01-06 03:20:02 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 04:02:03 User Name: imode = imode!~linear@unaffiliated/imode
2020-01-06 04:02:03 <imode> if you build a tool, and it has no purpose, what's the point of the tool?
2020-01-06 04:03:35 <zzo38> I don't know.
2020-01-06 04:06:09 <\oren\> should I rewrite my font editor in Rust?
2020-01-06 04:08:18 <imode> what's the purpose?
2020-01-06 04:37:42 <\oren\> it has a memory leak and I can't find it
2020-01-06 04:38:05 <\oren\> if I rewrite it in rust, that is supposed to mean it can't have memory leaks
2020-01-06 04:38:11 <zzo38> What font formats does it use?
2020-01-06 04:38:15 <\oren\> CDF
2020-01-06 04:38:19 <\oren\> BDF
2020-01-06 04:38:28 <zzo38> OK
2020-01-06 04:38:35 <zzo38> What is it written in now?
2020-01-06 04:38:37 <\oren\> C
2020-01-06 04:38:49 <zzo38> OK. Did you publish it?
2020-01-06 04:44:00 <zzo38> I have read of use of farbfeld compressed with bzip2 for picture compression. However, if a picture is in JPEG format then it seem JPEG is a better compression, but farbfeld compressed with bzip2 will be a better compression than PNG in some cases.
2020-01-06 04:44:29 <\oren\> http://www.orenwatson.be/neoletters_tools.tar
2020-01-06 04:44:47 <zzo38> OK
2020-01-06 04:53:44 Quit: heroux (Read error: Connection reset by peer)
2020-01-06 04:53:44 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 04:54:25 Joined: heroux
2020-01-06 04:54:25 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 04:56:02 <zzo38> What transformations can be done to improve JPEG compression without being more lossy?
2020-01-06 04:56:17 <zzo38> (Assuming the file that you are trying to transform is already JPEG)
2020-01-06 05:09:37 <imode> \oren\: valgrind?
2020-01-06 05:10:15 <imode> how do I build this?
2020-01-06 05:11:21 <imode> and do you have a sample file?
2020-01-06 05:11:40 <imode> built it, now I need a sample file.
2020-01-06 05:16:50 <\oren\> http://www.orenwatson.be/neoletters.bdf
2020-01-06 05:17:39 <zzo38> You could also try pcf2bdf
2020-01-06 05:18:38 <\oren\> oh and it also need s UnicodeData.txt from the unicode foundation
2020-01-06 05:18:53 <imode> mind linking me that?
2020-01-06 05:19:18 <imode> nvm.
2020-01-06 05:19:36 <\oren\> (this is how it displays the names) https://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt
2020-01-06 05:19:58 <imode> interesting..
2020-01-06 05:20:04 <imode> how do I exit the editor?
2020-01-06 05:20:12 <\oren\> ctrl-Q
2020-01-06 05:20:24 <\oren\> or ctrl-X to exit without saving
2020-01-06 05:21:32 <imode> interesting, yeah that's quite the memory leak. let's see if you clean up your allocated space.
2020-01-06 05:21:46 <zzo38> What if you want to make a non-Unicode font though? Then the Unicode data is not applicable.
2020-01-06 05:21:55 <imode> it looks like you never clean up the file judging by the size of the leak. the input BDF was ~3mb.
2020-01-06 05:22:02 <\oren\> oh
2020-01-06 05:22:05 <\oren\> hmmm
2020-01-06 05:22:43 <imode> 4,347,372 bytes allocated and in-use at exit, but no double frees.
2020-01-06 05:23:15 <\oren\> ok I'
2020-01-06 05:23:30 <\oren\> fix that and then see if it still has a leak
2020-01-06 05:24:24 <imode> I'm not that far in but I don't see any buffer cleanup, yeah.
2020-01-06 05:26:26 <imode> when you load the font, you `malloc` quite a bit of stuff and attach it to the passed-in bdfinfo, but I don't see you freeing it.
2020-01-06 05:26:42 <\oren\> I guess I kinda forgot that valgrind can't tell the difference between things still accessable at exit and things that have "actually" leaked
2020-01-06 05:26:45 <imode> that plus a calloc and no free.
2020-01-06 05:27:04 <imode> yeah you haven't lost the references to anything, you just haven't cleaned up the stuff you have references to.
2020-01-06 05:27:44 <imode> you `calloc` a big ol' hunk of space for some glyphs but you never free them.
2020-01-06 05:29:48 <imode> this is if you just load a font file, save and close. I imagine if you open another, you'll do the same allocations and lose the previous references.
2020-01-06 05:29:57 <zzo38> I think valgrind can tell you which one is "lost", though.
2020-01-06 05:30:27 <imode> it can and will.
2020-01-06 05:30:55 <\oren\> yeah apparently I'm bad at know what valgrind is saying
2020-01-06 05:33:01 <\oren\> I thought it meant I actually lost reference to that much
2020-01-06 05:33:11 <imode> nah, just means it's in use at exit.
2020-01-06 05:33:22 <imode> you'll see that with SDL and a couple of other libs.
2020-01-06 05:36:32 <\oren\> I'm going to work on making these tools more flexible and possible to work on fonts with different dimensions
2020-01-06 05:37:06 <imode> I dig the editing aesthetic. a lot of the glyphs are broken for me though.
2020-01-06 05:37:52 <\oren\> Well it relies on my fon't particular method of displaying braille to look good
2020-01-06 05:38:02 <imode> oh no the braile works great.
2020-01-06 05:38:17 <imode> this is garbage on my screen, though: "𝔅𝔇𝔉𝕖𝕕𝕚𝕥"
2020-01-06 05:38:42 <imode> too compressed I guess.
2020-01-06 05:41:56 <\oren\> https://imgur.com/GKQKGJG
2020-01-06 05:42:37 <imode> ah yeah, I can kinda see the edit part. capitals are just totally gone, though. my terminal is trying lmao.
2020-01-06 05:42:38 <\oren\> it says BDF in fraktur and edit in blackboard bold
2020-01-06 05:43:42 <\oren\> In my font, bold fraktur I gave up on and I made it uncial instead
2020-01-06 05:43:50 <imode> looks solid on that screen.
2020-01-06 05:45:45 <\oren\> https://imgur.com/yCgc3Kv I like how the unicode consortium added all these but then was like, full superscript and subscript alphabets? that's too far
2020-01-06 05:46:23 <imode> unicode doesn't have those? wtf.
2020-01-06 05:47:49 <\oren\> superscript small q, large C, Q, S, X, Y, Z are all that is missing for superscript
2020-01-06 05:48:29 <zzo38> I made up a better character set for the specific use of being used on a fix pitch text grid, such as on a terminal emulator.
2020-01-06 05:48:29 <\oren\> ᵃᵇᶜᵈᵉᶠᵍʰⁱʲᵏˡᵐⁿᵒᵖ ʳˢᵗᵘᵛʷˣʸᶻ
2020-01-06 05:48:46 <imode> why the hell are they missing?!
2020-01-06 05:49:06 <imode> what do they have against q, C, Q, S, X, Y and Z?
2020-01-06 05:49:18 Quit: stux (Ping timeout: 260 seconds)
2020-01-06 05:49:19 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 05:49:24 <\oren\> there was a big argument on the Unicode mailing list about it
2020-01-06 05:49:47 <\oren\> and basically the rasoning was, unicode isn't supposed to be used for formatting
2020-01-06 05:49:54 <imode> bullshit.
2020-01-06 05:50:01 <imode> that reasoning is bullshit.
2020-01-06 05:50:02 <\oren\> it is bullshit
2020-01-06 05:50:22 <imode> isn't there a character reversal glyph.
2020-01-06 05:50:41 <imode> U+202E?
2020-01-06 05:50:43 <zzo38> Unicode is very messy, and is equally bad for all uses.
2020-01-06 05:51:42 <zzo38> However, it does have the advantage of being compatible with ASCII, at least.
2020-01-06 05:51:46 <imode> yeah, bullshit, there's many, many, _many_ cases where unicode makes explicit statements about how a thing should be formatted. if that was a disagreement, the super and subscript forms shouldn't even be included, not this half measure.
2020-01-06 05:54:23 <zzo38> Do you like my terminal character coding? (It is not meant to be used for other purposes, though; but there may be other character sets useful for the other purposes.)
2020-01-06 05:54:38 <imode> I don't know your terminal character coding.
2020-01-06 05:54:42 <\oren\> I have it on my todo list to add all the missing ones in hthe PUA in my font
2020-01-06 05:55:18 Joined: stux
2020-01-06 05:55:19 Names: \oren\, ^[, aji, aloril, APic, b_jonas, Bowserinator, BWBellairs, Cale, catern, clog, ddmm, Deewiant, diginet, divergence, dnm, dog_star, eno1, erdic, esowiki, FireFly, fizzie, fungot, gitlogger, glowcoil, grumble, haavard, HackEso, hakatashi, heroux, Hooloovo0, howlands, imode, imode-ruby, int-e, interruptinuse, iovoid, izabera, j-bot, j4cbo, jix, joast, kingoffrance, kmc, laerling, lambdabot, LBPHacker, lifthrasiir, Lord_of_Life, Lykaina, Lymia, lynn, Melvar, mich181189, mniip, moony, myname, myndzi, nchambers, ocharles, olsner, ornxka, paul2520, pikhq, ProofTechnique, quintopia, relrod, rodgort, sebbu, sftp, Sgeo, shig, shikhin, shinh, Soni, sparr, sprocklem, stux, Taneb, trn, tromp, tswett[m], vertrex, wmww, zemhill, zoobab, zzo38
2020-01-06 05:57:12 <zzo38> This is so far:  http://zzo38computer.org/textfile/miscellaneous/utce  Some stuff may be changed if needed
2020-01-06 05:57:42 <zzo38> Some of these characters are also in Unicode but also many isn't.
2020-01-06 05:58:20 <zzo38> (And in some cases, it does correspond to a Unicode character but the width may differ or the way different characters are distinguished may differ from Unicode.)
